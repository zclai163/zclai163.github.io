<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Insomnia</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-16T11:39:48.704Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Insomnia</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQL语句练习</title>
    <link href="http://yoursite.com/2020/04/16/SQL%E8%AF%AD%E5%8F%A5%E7%BB%83%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/04/16/SQL%E8%AF%AD%E5%8F%A5%E7%BB%83%E4%B9%A0/</id>
    <published>2020-04-16T11:38:55.000Z</published>
    <updated>2020-04-16T11:39:48.704Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1. 用一条SQL 语句 查询出每门课都大于80 分的学生姓名</strong></p><p>name   course grade<br> 张三    语文       81<br> 张三     数学       75<br> 李四     语文       76<br> 李四     数学       90<br> 王五     语文       81<br> 王五     数学       100<br> 王五     英语       90</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">select</span> name <span class="keyword">from</span> table <span class="keyword">group</span> <span class="keyword">by</span> name having <span class="title">min</span>(<span class="params">grade</span>) &gt; 80</span></span><br></pre></td></tr></table></figure><p><strong>2. 现有学生表如下:</strong><br> 自动编号   学号   姓名 课程编号 课程名称 分数<br> 1        2005001 张三 0001     数学    69<br> 2        2005002 李四 0001      数学    89<br> 3        2005001 张三 0001      数学    69<br> <strong>删除除了自动编号不同, 其他都相同的学生冗余信息</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">delete tablename <span class="keyword">where</span> 自动编号 <span class="function">not <span class="title">in</span> (<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">select</span> min( 自动编号</span>) </span></span><br><span class="line"><span class="function">    <span class="keyword">from</span> tablename </span></span><br><span class="line"><span class="function">    <span class="keyword">group</span> <span class="keyword">by</span> 学号, 姓名, 课程编号, 课程名称, 分数</span></span><br><span class="line"><span class="function">)</span></span><br></pre></td></tr></table></figure><p><strong>3. 一个叫 team 的表，里面只有一个字段name, 一共有4 条纪录，分别是a,b,c,d, 对应四个球对，现在四个球对进行比赛，用一条sql 语句显示所有可能的比赛组合</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">select</span> <span class="selector-tag">a</span><span class="selector-class">.name</span>, <span class="selector-tag">b</span><span class="selector-class">.name</span></span><br><span class="line"><span class="selector-tag">from</span> <span class="selector-tag">team</span> <span class="selector-tag">a</span>, <span class="selector-tag">team</span> <span class="selector-tag">b</span> </span><br><span class="line"><span class="selector-tag">where</span> <span class="selector-tag">a</span><span class="selector-class">.name</span> &lt; <span class="selector-tag">b</span><span class="selector-class">.name</span></span><br></pre></td></tr></table></figure><p><strong>4. 请用SQL 语句实现：从TestDB 数据表中查询出所有月份的发生额都比101 科目相应月份的发生额高的科目。</strong><br> 请注意：TestDB 中有很多科目，都有1~12月份的发生额。<br> AccID ：科目代码，Occmonth ：发生额月份，DebitOccur ：发生额。<br> 数据库名：JcyAudit ，数据集：Select * from TestDB</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.*</span><br><span class="line"><span class="keyword">from</span> TestDB a, </span><br><span class="line">    (<span class="keyword">select</span> Occmonth, max(DebitOccur) <span class="keyword">as</span> Debit101ccur </span><br><span class="line">    <span class="keyword">from</span> TestDB </span><br><span class="line">    <span class="keyword">where</span> AccID=<span class="string">'101'</span> </span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> Occmonth) b</span><br><span class="line"><span class="keyword">where</span> a.Occmonth = b.Occmonth and a.DebitOccur &gt; b.Debit101ccur</span><br></pre></td></tr></table></figure><p><strong>5. 怎么把这样一个数据表</strong><br> year   month amount<br> 1991   1     1.1<br> 1991   2     1.2<br> 1991   3     1.3<br> 1991   4     1.4<br> 1992   1     2.1<br> 1992   2     2.2<br> 1992   3     2.3<br> 1992   4     2.4<br> <strong>查成这样一个结果？</strong><br> year m1   m2   m3   m4<br> 1991 1.1 1.2 1.3 1.4<br> 1992 2.1 2.2 2.3 2.4</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> year, </span><br><span class="line">    (<span class="keyword">select</span> amount <span class="keyword">from</span> table m <span class="keyword">where</span> month=<span class="number">1</span> and m.year=table.year) <span class="keyword">as</span> m1,</span><br><span class="line">    (<span class="keyword">select</span> amount <span class="keyword">from</span> table m <span class="keyword">where</span> month=<span class="number">2</span> and m.year=table.year) <span class="keyword">as</span> m2,</span><br><span class="line">    (<span class="keyword">select</span> amount <span class="keyword">from</span> table m <span class="keyword">where</span> month=<span class="number">3</span> and m.year=table.year) <span class="keyword">as</span> m3,</span><br><span class="line">    (<span class="keyword">select</span> amount <span class="keyword">from</span> table m <span class="keyword">where</span> month=<span class="number">4</span> and m.year=table.year) <span class="keyword">as</span> m4</span><br><span class="line"><span class="keyword">from</span> table <span class="keyword">group</span> <span class="keyword">by</span> year</span><br></pre></td></tr></table></figure><p><strong>6. 有表A，结构如下：</strong><br> p_ID p_Num s_id<br> 1 10 01<br> 1 12 02<br> 2 8 01<br> 3 11 01<br> 3 8 03<br> 其中：p_ID为产品ID，p_Num为产品库存量，s_id为仓库ID。<br> <strong>请用SQL语句实现将上表中的数据合并，合并后的数据为：</strong><br> p_ID s1_id s2_id s3_id<br> 1 10 12 0<br> 2 8 0 0<br> 3 11 0 8<br> 其中：s1_id为仓库1的库存量，s2_id为仓库2的库存量，s3_id为仓库3的库存量。如果该产品在某仓库中无库存量，那么就是0代替。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> p_id,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> s_id=<span class="number">1</span> then p_num <span class="keyword">else</span> <span class="number">0</span> end) <span class="keyword">as</span> s1_id,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> s_id=<span class="number">2</span> then p_num <span class="keyword">else</span> <span class="number">0</span> end) <span class="keyword">as</span> s2_id,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> s_id=<span class="number">3</span> then p_num <span class="keyword">else</span> <span class="number">0</span> end) <span class="keyword">as</span> s3_id</span><br><span class="line"><span class="keyword">from</span> myPro <span class="keyword">group</span> <span class="keyword">by</span> p_id</span><br></pre></td></tr></table></figure><hr><p>下面进入正题。首先创建数据表：</p><p><strong>学生表 Student</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">create table <span class="title">Student</span>(<span class="params">Sid varchar(<span class="number">6</span></span>), Sname <span class="title">varchar</span>(<span class="params"><span class="number">10</span></span>), Sage datetime, Ssex <span class="title">varchar</span>(<span class="params"><span class="number">10</span></span>))</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Student <span class="title">values</span>(<span class="params"><span class="string">'01'</span> , <span class="string">'赵雷'</span> , <span class="string">'1990-01-01'</span> , <span class="string">'男'</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Student <span class="title">values</span>(<span class="params"><span class="string">'02'</span> , <span class="string">'钱电'</span> , <span class="string">'1990-12-21'</span> , <span class="string">'男'</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Student <span class="title">values</span>(<span class="params"><span class="string">'03'</span> , <span class="string">'孙风'</span> , <span class="string">'1990-05-20'</span> , <span class="string">'男'</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Student <span class="title">values</span>(<span class="params"><span class="string">'04'</span> , <span class="string">'李云'</span> , <span class="string">'1990-08-06'</span> , <span class="string">'男'</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Student <span class="title">values</span>(<span class="params"><span class="string">'05'</span> , <span class="string">'周梅'</span> , <span class="string">'1991-12-01'</span> , <span class="string">'女'</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Student <span class="title">values</span>(<span class="params"><span class="string">'06'</span> , <span class="string">'吴兰'</span> , <span class="string">'1992-03-01'</span> , <span class="string">'女'</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Student <span class="title">values</span>(<span class="params"><span class="string">'07'</span> , <span class="string">'郑竹'</span> , <span class="string">'1989-07-01'</span> , <span class="string">'女'</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Student <span class="title">values</span>(<span class="params"><span class="string">'08'</span> , <span class="string">'王菊'</span> , <span class="string">'1990-01-20'</span> , <span class="string">'女'</span></span>)</span></span><br></pre></td></tr></table></figure><p><strong>成绩表 SC</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">create table <span class="title">SC</span>(<span class="params">Sid varchar(<span class="number">10</span></span>), Cid <span class="title">varchar</span>(<span class="params"><span class="number">10</span></span>), score <span class="title">decimal</span>(<span class="params"><span class="number">18</span>,<span class="number">1</span></span>))</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'01'</span> , <span class="string">'01'</span> , <span class="number">80</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'01'</span> , <span class="string">'02'</span> , <span class="number">90</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'01'</span> , <span class="string">'03'</span> , <span class="number">99</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'02'</span> , <span class="string">'01'</span> , <span class="number">70</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'02'</span> , <span class="string">'02'</span> , <span class="number">60</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'02'</span> , <span class="string">'03'</span> , <span class="number">80</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'03'</span> , <span class="string">'01'</span> , <span class="number">80</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'03'</span> , <span class="string">'02'</span> , <span class="number">80</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'03'</span> , <span class="string">'03'</span> , <span class="number">80</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'04'</span> , <span class="string">'01'</span> , <span class="number">50</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'04'</span> , <span class="string">'02'</span> , <span class="number">30</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'04'</span> , <span class="string">'03'</span> , <span class="number">20</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'05'</span> , <span class="string">'01'</span> , <span class="number">76</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'05'</span> , <span class="string">'02'</span> , <span class="number">87</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'06'</span> , <span class="string">'01'</span> , <span class="number">31</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'06'</span> , <span class="string">'03'</span> , <span class="number">34</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'07'</span> , <span class="string">'02'</span> , <span class="number">89</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> SC <span class="title">values</span>(<span class="params"><span class="string">'07'</span> , <span class="string">'03'</span> , <span class="number">98</span></span>)</span></span><br></pre></td></tr></table></figure><p><strong>课程表 Course</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">create table <span class="title">Course</span>(<span class="params">Cid varchar(<span class="number">10</span></span>),Cname <span class="title">varchar</span>(<span class="params"><span class="number">10</span></span>),Tid <span class="title">varchar</span>(<span class="params"><span class="number">10</span></span>))</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Course <span class="title">values</span>(<span class="params"><span class="string">'01'</span> , <span class="string">'语文'</span> , <span class="string">'02'</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Course <span class="title">values</span>(<span class="params"><span class="string">'02'</span> , <span class="string">'数学'</span> , <span class="string">'01'</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Course <span class="title">values</span>(<span class="params"><span class="string">'03'</span> , <span class="string">'英语'</span> , <span class="string">'03'</span></span>)</span></span><br></pre></td></tr></table></figure><p><strong>教师表 Teacher</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">create table <span class="title">Teacher</span>(<span class="params">Tid varchar(<span class="number">10</span></span>),Tname <span class="title">varchar</span>(<span class="params"><span class="number">10</span></span>))</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Teacher <span class="title">values</span>(<span class="params"><span class="string">'01'</span> , <span class="string">'张三'</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Teacher <span class="title">values</span>(<span class="params"><span class="string">'02'</span> , <span class="string">'李四'</span></span>)</span>;</span><br><span class="line"><span class="function">insert <span class="keyword">into</span> Teacher <span class="title">values</span>(<span class="params"><span class="string">'03'</span> , <span class="string">'王五'</span></span>)</span></span><br></pre></td></tr></table></figure><p>四张表之间的关联很简单：</p><p><img src="https:////upload-images.jianshu.io/upload_images/10870953-a9ce8600ab818b63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>表格关联</p><p>（以下题目的顺序和原文相对应）</p><p><strong>1. 查询” 01 “课程比” 02 “课程成绩高的学生的信息及课程分数</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.*, a.score <span class="keyword">as</span> score_01, b.score <span class="keyword">as</span> score_02</span><br><span class="line"><span class="keyword">from</span> student s,</span><br><span class="line">     (<span class="keyword">select</span> sid, score <span class="keyword">from</span> sc <span class="keyword">where</span> cid=<span class="number">01</span>) a,</span><br><span class="line">     (<span class="keyword">select</span> sid, score <span class="keyword">from</span> sc <span class="keyword">where</span> cid=<span class="number">02</span>) b</span><br><span class="line"><span class="keyword">where</span> a.sid = b.sid and a.score &gt; b.score and s.sid = a.sid</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+----------+----------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">| score_01 |</span> score_02 <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+----------+----------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">02</span>   <span class="params">| 钱电   |</span> <span class="number">1990</span>-<span class="number">12</span>-<span class="number">21</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span>     <span class="number">70.0</span> <span class="params">|     60.0 |</span></span><br><span class="line"><span class="params">| 04   |</span> 李云   <span class="params">| 1990-08-06 00:00:00 |</span> 男   <span class="params">|     50.0 |</span>     <span class="number">30.0</span> <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+----------+----------+</span></span><br><span class="line"><span class="params">2 rows <span class="keyword">in</span> set (0.00 sec)</span></span><br></pre></td></tr></table></figure><p><strong>2. 查询平均成绩大于等于 60 分的同学的学生编号和学生姓名和平均成绩</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.sid, sname, avg(score) <span class="keyword">as</span> avg_score</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s, sc</span><br><span class="line"><span class="keyword">where</span> s.sid = sc.sid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sid</span><br><span class="line">having avg_score &gt; <span class="number">60</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+-----------+</span><br><span class="line"><span class="params">| sid  |</span> sname  <span class="params">| avg_score |</span></span><br><span class="line">+------+--------+-----------+</span><br><span class="line"><span class="params">| 01   |</span> 赵雷   <span class="params">|  89.66667 |</span></span><br><span class="line"><span class="params">| 02   |</span> 钱电   <span class="params">|  70.00000 |</span></span><br><span class="line"><span class="params">| 03   |</span> 孙风   <span class="params">|  80.00000 |</span></span><br><span class="line"><span class="params">| 05   |</span> 周梅   <span class="params">|  81.50000 |</span></span><br><span class="line"><span class="params">| 07   |</span> 郑竹   <span class="params">|  93.50000 |</span></span><br><span class="line">+------+--------+-----------+</span><br><span class="line"><span class="number">5</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>3. 查询在 SC 表存在成绩的学生信息</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="keyword">where</span> sid <span class="title">in</span> (<span class="params"><span class="keyword">select</span> sid <span class="keyword">from</span> sc <span class="keyword">where</span> score <span class="keyword">is</span> not <span class="literal">null</span></span>)</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">01</span>   <span class="params">| 赵雷   |</span> <span class="number">1990</span>-<span class="number">01</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line"><span class="params">| 02   |</span> 钱电   <span class="params">| 1990-12-21 00:00:00 |</span> 男   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">03</span>   <span class="params">| 孙风   |</span> <span class="number">1990</span>-<span class="number">05</span>-<span class="number">20</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line"><span class="params">| 04   |</span> 李云   <span class="params">| 1990-08-06 00:00:00 |</span> 男   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">05</span>   <span class="params">| 周梅   |</span> <span class="number">1991</span>-<span class="number">12</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 女   |</span></span><br><span class="line"><span class="params">| 06   |</span> 吴兰   <span class="params">| 1992-03-01 00:00:00 |</span> 女   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">07</span>   <span class="params">| 郑竹   |</span> <span class="number">1989</span>-<span class="number">07</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 女   |</span></span><br><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="number">7</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>4. 查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩(没成绩的显示为 null )</strong></p><p>这道题得用到left join或者right join，不能用where连接，因为题目说了要求有显示为null的，where是inner join，不会出现null，在这道题里会查不出第08号学生。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.sid, s.sname, count(cid) <span class="keyword">as</span> 选课总数, sum(score) <span class="keyword">as</span> 总成绩</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s left <span class="keyword">join</span> sc</span><br><span class="line"><span class="keyword">on</span> s.sid = sc.sid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sid</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+--------------+-----------+</span><br><span class="line"><span class="params">| sid  |</span> sname  <span class="params">| 选课总数     |</span> 总成绩    <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+--------------+-----------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">01</span>   <span class="params">| 赵雷   |</span>            <span class="number">3</span> <span class="params">|     269.0 |</span></span><br><span class="line"><span class="params">| 02   |</span> 钱电   <span class="params">|            3 |</span>     <span class="number">210.0</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">03</span>   <span class="params">| 孙风   |</span>            <span class="number">3</span> <span class="params">|     240.0 |</span></span><br><span class="line"><span class="params">| 04   |</span> 李云   <span class="params">|            3 |</span>     <span class="number">100.0</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">05</span>   <span class="params">| 周梅   |</span>            <span class="number">2</span> <span class="params">|     163.0 |</span></span><br><span class="line"><span class="params">| 06   |</span> 吴兰   <span class="params">|            2 |</span>      <span class="number">65.0</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">07</span>   <span class="params">| 郑竹   |</span>            <span class="number">2</span> <span class="params">|     187.0 |</span></span><br><span class="line"><span class="params">| 08   |</span> 王菊   <span class="params">|            0 |</span>      NULL <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+--------------+-----------+</span></span><br><span class="line"><span class="params">8 rows <span class="keyword">in</span> set (0.00 sec)</span></span><br></pre></td></tr></table></figure><p><strong>4.1 查有成绩的学生信息</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.sid, s.sname, count(*) <span class="keyword">as</span> 选课总数, sum(score) <span class="keyword">as</span> 总成绩,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> cid = <span class="number">01</span> then score <span class="keyword">else</span> <span class="literal">null</span> end) <span class="keyword">as</span> score_01,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> cid = <span class="number">02</span> then score <span class="keyword">else</span> <span class="literal">null</span> end) <span class="keyword">as</span> score_02,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> cid = <span class="number">03</span> then score <span class="keyword">else</span> <span class="literal">null</span> end) <span class="keyword">as</span> score_03</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s, sc</span><br><span class="line"><span class="keyword">where</span> s.sid = sc.sid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sid</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+--------------+-----------+----------+----------+----------+</span><br><span class="line"><span class="params">| sid  |</span> sname  <span class="params">| 选课总数     |</span> 总成绩    <span class="params">| score_01 |</span> score_02 <span class="params">| score_03 |</span></span><br><span class="line">+------+--------+--------------+-----------+----------+----------+----------+</span><br><span class="line"><span class="params">| 01   |</span> 赵雷   <span class="params">|            3 |</span>     <span class="number">269.0</span> <span class="params">|     80.0 |</span>     <span class="number">90.0</span> <span class="params">|     99.0 |</span></span><br><span class="line"><span class="params">| 02   |</span> 钱电   <span class="params">|            3 |</span>     <span class="number">210.0</span> <span class="params">|     70.0 |</span>     <span class="number">60.0</span> <span class="params">|     80.0 |</span></span><br><span class="line"><span class="params">| 03   |</span> 孙风   <span class="params">|            3 |</span>     <span class="number">240.0</span> <span class="params">|     80.0 |</span>     <span class="number">80.0</span> <span class="params">|     80.0 |</span></span><br><span class="line"><span class="params">| 04   |</span> 李云   <span class="params">|            3 |</span>     <span class="number">100.0</span> <span class="params">|     50.0 |</span>     <span class="number">30.0</span> <span class="params">|     20.0 |</span></span><br><span class="line"><span class="params">| 05   |</span> 周梅   <span class="params">|            2 |</span>     <span class="number">163.0</span> <span class="params">|     76.0 |</span>     <span class="number">87.0</span> <span class="params">|     NULL |</span></span><br><span class="line"><span class="params">| 06   |</span> 吴兰   <span class="params">|            2 |</span>      <span class="number">65.0</span> <span class="params">|     31.0 |</span>     NULL <span class="params">|     34.0 |</span></span><br><span class="line"><span class="params">| 07   |</span> 郑竹   <span class="params">|            2 |</span>     <span class="number">187.0</span> <span class="params">|     NULL |</span>     <span class="number">89.0</span> <span class="params">|     98.0 |</span></span><br><span class="line">+------+--------+--------------+-----------+----------+----------+----------+</span><br><span class="line"><span class="number">7</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>5. 查询「李」姓老师的数量</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">count</span>(<span class="params">tname</span>) <span class="keyword">from</span> teacher <span class="keyword">where</span> tname like '李%'</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+--------------+</span><br><span class="line"><span class="params">| count(tname) |</span></span><br><span class="line">+--------------+</span><br><span class="line"><span class="params">|            1 |</span></span><br><span class="line">+--------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>6. 查询学过「张三」老师授课的同学的信息</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="keyword">where</span> sid <span class="title">in</span> (<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">select</span> sid <span class="keyword">from</span> sc, course, teacher</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">where</span> sc.cid = course.cid</span></span></span><br><span class="line"><span class="function"><span class="params">     and course.tid = teacher.tid</span></span></span><br><span class="line"><span class="function"><span class="params">     and tname = <span class="string">'张三'</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span>)</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">01</span>   <span class="params">| 赵雷   |</span> <span class="number">1990</span>-<span class="number">01</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line"><span class="params">| 02   |</span> 钱电   <span class="params">| 1990-12-21 00:00:00 |</span> 男   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">03</span>   <span class="params">| 孙风   |</span> <span class="number">1990</span>-<span class="number">05</span>-<span class="number">20</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line"><span class="params">| 04   |</span> 李云   <span class="params">| 1990-08-06 00:00:00 |</span> 男   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">05</span>   <span class="params">| 周梅   |</span> <span class="number">1991</span>-<span class="number">12</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 女   |</span></span><br><span class="line"><span class="params">| 07   |</span> 郑竹   <span class="params">| 1989-07-01 00:00:00 |</span> 女   <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+</span></span><br><span class="line"><span class="params">6 rows <span class="keyword">in</span> set (0.00 sec)</span></span><br></pre></td></tr></table></figure><p>原作者的写法里面用到了等号 =，虽然得到同样的结果，但是这样写不太好，因为不确定张三老师是不是只教授一门课（只不过现在的数据量太小了而已），in 适用于一个或多个返回结果的情况，适应性比等号更广。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> Student</span><br><span class="line"><span class="function"><span class="keyword">where</span> sid <span class="title">in</span>(<span class="params"><span class="keyword">select</span> distinct Sid <span class="keyword">from</span> SC</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">where</span> cid=(<span class="keyword">select</span> Cid <span class="keyword">from</span> Course</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">where</span> Tid=(<span class="keyword">select</span> Tid <span class="keyword">from</span> Teacher <span class="keyword">where</span> Tname=<span class="string">'张三'</span></span>)))</span></span><br></pre></td></tr></table></figure><p><strong>7. 查询没有学全所有课程的同学的信息</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="keyword">where</span> sid <span class="title">in</span> (<span class="params"><span class="keyword">select</span> sid <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> sid having count(cid</span>) &lt; 3)</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">05</span>   <span class="params">| 周梅   |</span> <span class="number">1991</span>-<span class="number">12</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 女   |</span></span><br><span class="line"><span class="params">| 06   |</span> 吴兰   <span class="params">| 1992-03-01 00:00:00 |</span> 女   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">07</span>   <span class="params">| 郑竹   |</span> <span class="number">1989</span>-<span class="number">07</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 女   |</span></span><br><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="number">3</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>9. 查询和” 01 “号的同学学习的课程完全相同的其他同学的信息</strong><br> 这道题号称是所有题目里最难的一道，我虽然做了出来，但是写法很麻烦，不必要。原作者写的很简洁：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> Student</span><br><span class="line"><span class="function"><span class="keyword">where</span> Sid <span class="title">in</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">select</span> Sid <span class="keyword">from</span> SC</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">where</span> Cid <span class="keyword">in</span> (<span class="keyword">select</span> Cid <span class="keyword">from</span> SC <span class="keyword">where</span> Sid = <span class="string">'01'</span></span>) and Sid &lt;&gt;'01'</span></span><br><span class="line"><span class="function">    <span class="keyword">group</span> <span class="keyword">by</span> Sid</span></span><br><span class="line"><span class="function">    having <span class="title">COUNT</span>(<span class="params">Cid</span>)&gt;</span>=<span class="number">3</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">02</span>   <span class="params">| 钱电   |</span> <span class="number">1990</span>-<span class="number">12</span>-<span class="number">21</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line"><span class="params">| 03   |</span> 孙风   <span class="params">| 1990-05-20 00:00:00 |</span> 男   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">04</span>   <span class="params">| 李云   |</span> <span class="number">1990</span>-08-<span class="number">06</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="number">3</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p>我写的就太麻烦啦。。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="keyword">where</span> sid <span class="title">in</span> (<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">select</span> B.sid</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">from</span></span></span></span><br><span class="line"><span class="function"><span class="params">        (<span class="keyword">select</span> sid,</span></span></span><br><span class="line"><span class="function"><span class="params">            sum(<span class="keyword">case</span> <span class="keyword">when</span> cid=<span class="number">01</span> then <span class="number">1</span> else <span class="number">0</span> end</span>) <span class="keyword">as</span> course_01,</span></span><br><span class="line"><span class="function">            <span class="title">sum</span>(<span class="params"><span class="keyword">case</span> <span class="keyword">when</span> cid=<span class="number">02</span> then <span class="number">1</span> else <span class="number">0</span> end</span>) <span class="keyword">as</span> course_02,</span></span><br><span class="line"><span class="function">            <span class="title">sum</span>(<span class="params"><span class="keyword">case</span> <span class="keyword">when</span> cid=<span class="number">03</span> then <span class="number">1</span> else <span class="number">0</span> end</span>) <span class="keyword">as</span> course_03</span></span><br><span class="line"><span class="function">        <span class="keyword">from</span> sc <span class="keyword">where</span> sid</span> = <span class="number">01</span> <span class="keyword">group</span> <span class="keyword">by</span> sid) <span class="keyword">as</span> A,</span><br><span class="line">        (<span class="keyword">select</span> sid,</span><br><span class="line">            sum(<span class="keyword">case</span> <span class="keyword">when</span> cid=<span class="number">01</span> then <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> end) <span class="keyword">as</span> course_01,</span><br><span class="line">            sum(<span class="keyword">case</span> <span class="keyword">when</span> cid=<span class="number">02</span> then <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> end) <span class="keyword">as</span> course_02,</span><br><span class="line">            sum(<span class="keyword">case</span> <span class="keyword">when</span> cid=<span class="number">03</span> then <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> end) <span class="keyword">as</span> course_03</span><br><span class="line">        <span class="keyword">from</span> sc <span class="keyword">where</span> sid != <span class="number">01</span> <span class="keyword">group</span> <span class="keyword">by</span> sid) <span class="keyword">as</span> B</span><br><span class="line">    <span class="keyword">where</span> A.course_01=B.course_01 and A.course_02=B.course_02 and A.course_03=B.course_03</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">02</span>   <span class="params">| 钱电   |</span> <span class="number">1990</span>-<span class="number">12</span>-<span class="number">21</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line"><span class="params">| 03   |</span> 孙风   <span class="params">| 1990-05-20 00:00:00 |</span> 男   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">04</span>   <span class="params">| 李云   |</span> <span class="number">1990</span>-08-<span class="number">06</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="number">3</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>8. 查询至少有一门课与学号为” 01 “的同学所学相同的同学的信息</strong></p><p>和第9题基本一致，还是原作者写的好一些</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> Student <span class="keyword">where</span> Sid <span class="title">in</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">select</span> distinct Sid <span class="keyword">from</span> SC <span class="keyword">where</span> Cid <span class="keyword">in</span>(</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">select</span> Cid <span class="keyword">from</span> SC <span class="keyword">where</span> Sid=<span class="string">'01'</span></span></span></span><br><span class="line"><span class="function"><span class="params">    </span>)</span></span><br><span class="line"><span class="function">)</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">01</span>   <span class="params">| 赵雷   |</span> <span class="number">1990</span>-<span class="number">01</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line"><span class="params">| 02   |</span> 钱电   <span class="params">| 1990-12-21 00:00:00 |</span> 男   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">03</span>   <span class="params">| 孙风   |</span> <span class="number">1990</span>-<span class="number">05</span>-<span class="number">20</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line"><span class="params">| 04   |</span> 李云   <span class="params">| 1990-08-06 00:00:00 |</span> 男   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">05</span>   <span class="params">| 周梅   |</span> <span class="number">1991</span>-<span class="number">12</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 女   |</span></span><br><span class="line"><span class="params">| 06   |</span> 吴兰   <span class="params">| 1992-03-01 00:00:00 |</span> 女   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">07</span>   <span class="params">| 郑竹   |</span> <span class="number">1989</span>-<span class="number">07</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 女   |</span></span><br><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="number">7</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>10. 查询没学过”张三”老师讲授的任一门课程的学生姓名</strong></p><p>一般涉及到”任意”的都会用到not in这样的取反的结构：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> student</span><br><span class="line"><span class="function"><span class="keyword">where</span> sname not <span class="title">in</span> (<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">select</span> s.sname</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">from</span> student <span class="keyword">as</span> s, course <span class="keyword">as</span> c, teacher <span class="keyword">as</span> t, sc</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">where</span> s.sid = sc.sid</span></span></span><br><span class="line"><span class="function"><span class="params">        and sc.cid = c.cid</span></span></span><br><span class="line"><span class="function"><span class="params">        and c.tid = t.tid</span></span></span><br><span class="line"><span class="function"><span class="params">        and t.tname = <span class="string">'张三'</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span>)</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+--------+</span><br><span class="line"><span class="params">| sname  |</span></span><br><span class="line">+--------+</span><br><span class="line"><span class="params">| 吴兰   |</span></span><br><span class="line"><span class="params">| 王菊   |</span></span><br><span class="line">+--------+</span><br><span class="line"><span class="number">2</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>11. 查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.sid, s.sname, avg(score)</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s, sc</span><br><span class="line"><span class="keyword">where</span> s.sid = sc.sid and score&lt;<span class="number">60</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sid</span><br><span class="line"><span class="function">having <span class="title">count</span>(<span class="params">score</span>)&gt;</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+------------+</span><br><span class="line"><span class="params">| sid  |</span> sname  <span class="params">| avg(score) |</span></span><br><span class="line">+------+--------+------------+</span><br><span class="line"><span class="params">| 04   |</span> 李云   <span class="params">|   33.33333 |</span></span><br><span class="line"><span class="params">| 06   |</span> 吴兰   <span class="params">|   32.50000 |</span></span><br><span class="line">+------+--------+------------+</span><br><span class="line"><span class="number">2</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>12. 检索” 01 “课程分数小于 60，按分数降序排列的学生信息</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.* ,score</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s, sc</span><br><span class="line"><span class="keyword">where</span> cid = <span class="number">01</span></span><br><span class="line">  and score &lt; <span class="number">60</span></span><br><span class="line">  and s.sid=sc.sid</span><br><span class="line">order <span class="keyword">by</span> score desc</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+-------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">| score |</span></span><br><span class="line">+------+--------+---------------------+------+-------+</span><br><span class="line"><span class="params">| 04   |</span> 李云   <span class="params">| 1990-08-06 00:00:00 |</span> 男   <span class="params">|  50.0 |</span></span><br><span class="line"><span class="params">| 06   |</span> 吴兰   <span class="params">| 1992-03-01 00:00:00 |</span> 女   <span class="params">|  31.0 |</span></span><br><span class="line">+------+--------+---------------------+------+-------+</span><br><span class="line"><span class="number">2</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>13. 按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sid,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> cid=<span class="number">01</span> then score <span class="keyword">else</span> <span class="literal">null</span> end) <span class="keyword">as</span> score_01,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> cid=<span class="number">02</span> then score <span class="keyword">else</span> <span class="literal">null</span> end) <span class="keyword">as</span> score_02,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> cid=<span class="number">03</span> then score <span class="keyword">else</span> <span class="literal">null</span> end) <span class="keyword">as</span> score_03,</span><br><span class="line">    avg(score)</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> sid</span><br><span class="line"><span class="function">order <span class="keyword">by</span> <span class="title">avg</span>(<span class="params">score</span>) desc</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">+------+----------+----------+----------+------------+</span><br><span class="line"><span class="params">| sid  |</span> score_01 <span class="params">| score_02 |</span> score_03 <span class="params">| avg(score) |</span></span><br><span class="line">+------+----------+----------+----------+------------+</span><br><span class="line"><span class="params">| 07   |</span>     NULL <span class="params">|     89.0 |</span>     <span class="number">98.0</span> <span class="params">|   93.50000 |</span></span><br><span class="line"><span class="params">| 01   |</span>     <span class="number">80.0</span> <span class="params">|     90.0 |</span>     <span class="number">99.0</span> <span class="params">|   89.66667 |</span></span><br><span class="line"><span class="params">| 05   |</span>     <span class="number">76.0</span> <span class="params">|     87.0 |</span>     NULL <span class="params">|   81.50000 |</span></span><br><span class="line"><span class="params">| 03   |</span>     <span class="number">80.0</span> <span class="params">|     80.0 |</span>     <span class="number">80.0</span> <span class="params">|   80.00000 |</span></span><br><span class="line"><span class="params">| 02   |</span>     <span class="number">70.0</span> <span class="params">|     60.0 |</span>     <span class="number">80.0</span> <span class="params">|   70.00000 |</span></span><br><span class="line"><span class="params">| 04   |</span>     <span class="number">50.0</span> <span class="params">|     30.0 |</span>     <span class="number">20.0</span> <span class="params">|   33.33333 |</span></span><br><span class="line"><span class="params">| 06   |</span>     <span class="number">31.0</span> <span class="params">|     NULL |</span>     <span class="number">34.0</span> <span class="params">|   32.50000 |</span></span><br><span class="line">+------+----------+----------+----------+------------+</span><br><span class="line"><span class="number">7</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>14. 查询各科成绩最高分、最低分和平均分，以如下形式显示：课程 ID，课程 name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率(及格为&gt;=60，中等为：70-80，优良为：80-90，优秀为：&gt;=90）。<br> 要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列</strong></p><p>这道题熟练掌握case和sum的用法就没什么问题</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">select <span class="built_in">c</span>.cid <span class="keyword">as</span> 课程号, <span class="built_in">c</span>.cname <span class="keyword">as</span> 课程名称, <span class="built_in">count</span>(*) <span class="keyword">as</span> 选修人数,</span><br><span class="line">    <span class="built_in">max</span>(score) <span class="keyword">as</span> 最高分, <span class="built_in">min</span>(score) <span class="keyword">as</span> 最低分, avg(score) <span class="keyword">as</span> 平均分,</span><br><span class="line">    sum(<span class="keyword">case</span> when score &gt;= <span class="number">60</span> then <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> end)/<span class="built_in">count</span>(*) <span class="keyword">as</span> 及格率,</span><br><span class="line">    sum(<span class="keyword">case</span> when score &gt;= <span class="number">70</span> and score &lt; <span class="number">80</span> then <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> end)/<span class="built_in">count</span>(*) <span class="keyword">as</span> 中等率,</span><br><span class="line">    sum(<span class="keyword">case</span> when score &gt;= <span class="number">80</span> and score &lt; <span class="number">90</span> then <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> end)/<span class="built_in">count</span>(*) <span class="keyword">as</span> 优良率,</span><br><span class="line">    sum(<span class="keyword">case</span> when score &gt;= <span class="number">90</span> then <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> end)/<span class="built_in">count</span>(*) <span class="keyword">as</span> 优秀率</span><br><span class="line">from sc, course <span class="built_in">c</span></span><br><span class="line"><span class="keyword">where</span> <span class="built_in">c</span>.cid = sc.cid</span><br><span class="line">group by <span class="built_in">c</span>.cid</span><br><span class="line">order by <span class="built_in">count</span>(*) desc, <span class="built_in">c</span>.cid asc</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+-----------+--------------+--------------+-----------+-----------+-----------+-----------+-----------+-----------+-----------+</span><br><span class="line"><span class="params">| 课程号    |</span> 课程名称      <span class="params">| 选修人数      |</span> 最高分     <span class="params">| 最低分    |</span> 平均分     <span class="params">| 及格率    |</span> 中等率    <span class="params">| 优良率     |</span> 优秀率     <span class="params">|</span></span><br><span class="line"><span class="params">+-----------+--------------+--------------+-----------+-----------+-----------+-----------+-----------+-----------+-----------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">01</span>        <span class="params">| 语文         |</span>            <span class="number">6</span> <span class="params">|      80.0 |</span>      <span class="number">31.0</span> <span class="params">|  64.50000 |</span>    <span class="number">0</span>.<span class="number">6667</span> <span class="params">|    0.3333 |</span>    <span class="number">0</span>.<span class="number">3333</span> <span class="params">|    0.0000 |</span></span><br><span class="line"><span class="params">| 02        |</span> 数学         <span class="params">|            6 |</span>      <span class="number">90.0</span> <span class="params">|      30.0 |</span>  <span class="number">72.66667</span> <span class="params">|    0.8333 |</span>    <span class="number">0</span>.<span class="number">0000</span> <span class="params">|    0.5000 |</span>    <span class="number">0</span>.<span class="number">1667</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">03</span>        <span class="params">| 英语         |</span>            <span class="number">6</span> <span class="params">|      99.0 |</span>      <span class="number">20.0</span> <span class="params">|  68.50000 |</span>    <span class="number">0</span>.<span class="number">6667</span> <span class="params">|    0.0000 |</span>    <span class="number">0</span>.<span class="number">3333</span> <span class="params">|    0.3333 |</span></span><br><span class="line">+-----------+--------------+--------------+-----------+-----------+-----------+-----------+-----------+-----------+-----------+</span><br><span class="line"><span class="number">3</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p>原作者的写法本质上和我是相同的，但是用了很多left join看起来有些冗余</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> distinct A.Cid,Cname,最高分,最低分,平均分,及格率,中等率,优良率,优秀率 <span class="keyword">from</span> SC A</span><br><span class="line">left <span class="keyword">join</span> Course <span class="keyword">on</span> A.Cid=Course.Cid</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> Cid,MAX(score</span>)最高分,<span class="title">MIN</span>(<span class="params">score</span>)最低分,<span class="title">AVG</span>(<span class="params">score</span>)平均分 <span class="keyword">from</span> SC <span class="keyword">group</span> <span class="keyword">by</span> Cid)B <span class="keyword">on</span> A.Cid</span>=B.Cid</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> Cid,(convert(<span class="keyword">decimal</span>(<span class="number">5</span>,<span class="number">2</span></span>),(<span class="params">sum(<span class="keyword">case</span> <span class="keyword">when</span> score&gt;=<span class="number">60</span> then <span class="number">1</span> else <span class="number">0</span> end</span>)*1.00)/<span class="title">COUNT</span>(<span class="params">*</span>))*100)及格率 <span class="keyword">from</span> SC <span class="keyword">group</span> <span class="keyword">by</span> Cid)C <span class="keyword">on</span> A.Cid</span>=C.Cid</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> Cid,(convert(<span class="keyword">decimal</span>(<span class="number">5</span>,<span class="number">2</span></span>),(<span class="params">sum(<span class="keyword">case</span> <span class="keyword">when</span> score &gt;=<span class="number">70</span> and score&lt;<span class="number">80</span> then <span class="number">1</span> else <span class="number">0</span> end</span>)*1.00)/<span class="title">COUNT</span>(<span class="params">*</span>))*100)中等率 <span class="keyword">from</span> SC <span class="keyword">group</span> <span class="keyword">by</span> Cid)D <span class="keyword">on</span> A.Cid</span>=D.Cid</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> Cid,(convert(<span class="keyword">decimal</span>(<span class="number">5</span>,<span class="number">2</span></span>),(<span class="params">sum(<span class="keyword">case</span> <span class="keyword">when</span> score &gt;=<span class="number">80</span> and score&lt;<span class="number">90</span> then <span class="number">1</span> else <span class="number">0</span> end</span>)*1.00)/<span class="title">COUNT</span>(<span class="params">*</span>))*100)优良率 <span class="keyword">from</span> SC <span class="keyword">group</span> <span class="keyword">by</span> Cid)E <span class="keyword">on</span> A.Cid</span>=E.Cid</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> Cid,(convert(<span class="keyword">decimal</span>(<span class="number">5</span>,<span class="number">2</span></span>),(<span class="params">sum(<span class="keyword">case</span> <span class="keyword">when</span> score &gt;=<span class="number">90</span> then <span class="number">1</span> else <span class="number">0</span> end</span>)*1.00)/<span class="title">COUNT</span>(<span class="params">*</span>))*100)优秀率</span></span><br><span class="line"><span class="function"><span class="keyword">from</span> SC <span class="keyword">group</span> <span class="keyword">by</span> Cid)F <span class="keyword">on</span> A.Cid</span>=F.Cid</span><br></pre></td></tr></table></figure><p><strong>15. 按平均成绩进行排序，显示总排名和各科排名，Score 重复时保留名次空缺</strong></p><p>原题目是按各科成绩进行排序，并显示排名， Score 重复时保留名次空缺。但是我没看明白什么意思，各科成绩如何排序？语文分数和数学分数有可比性吗？作者的写法是<code>select *,RANK()over(order by score desc)排名 from SC</code>，把所有的成绩都放到一块儿排序了，这没有意义，不可比。于是我修改了一下题目。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.*, rank_01, rank_02, rank_03, rank_total</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> sid, rank(</span>) <span class="title">over</span>(<span class="params">partition <span class="keyword">by</span> cid order <span class="keyword">by</span> score desc</span>) <span class="keyword">as</span> rank_01 <span class="keyword">from</span> sc <span class="keyword">where</span> cid</span>=<span class="number">01</span>) A <span class="keyword">on</span> s.sid=A.sid</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> sid, rank(</span>) <span class="title">over</span>(<span class="params">partition <span class="keyword">by</span> cid order <span class="keyword">by</span> score desc</span>) <span class="keyword">as</span> rank_02 <span class="keyword">from</span> sc <span class="keyword">where</span> cid</span>=<span class="number">02</span>) B <span class="keyword">on</span> s.sid=B.sid</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> sid, rank(</span>) <span class="title">over</span>(<span class="params">partition <span class="keyword">by</span> cid order <span class="keyword">by</span> score desc</span>) <span class="keyword">as</span> rank_03 <span class="keyword">from</span> sc <span class="keyword">where</span> cid</span>=<span class="number">03</span>) C <span class="keyword">on</span> s.sid=C.sid</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> sid, rank(</span>) <span class="title">over</span>(<span class="params">order <span class="keyword">by</span> avg(score</span>) desc) <span class="keyword">as</span> rank_total <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> sid) D <span class="keyword">on</span> s.sid</span>=D.sid</span><br><span class="line">order <span class="keyword">by</span> rank_total asc</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+---------+---------+---------+------------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">| rank_01 |</span> rank_02 <span class="params">| rank_03 |</span> rank_total <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+---------+---------+---------+------------+</span></span><br><span class="line"><span class="params">|</span> 08   <span class="params">| 王菊   |</span> <span class="number">1990</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 女   |</span>    NULL <span class="params">|    NULL |</span>    NULL <span class="params">|       NULL |</span></span><br><span class="line"><span class="params">| 07   |</span> 郑竹   <span class="params">| 1989-07-01 00:00:00 |</span> 女   <span class="params">|    NULL |</span>       <span class="number">2</span> <span class="params">|       2 |</span>          <span class="number">1</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">01</span>   <span class="params">| 赵雷   |</span> <span class="number">1990</span>-<span class="number">01</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span>       <span class="number">1</span> <span class="params">|       1 |</span>       <span class="number">1</span> <span class="params">|          2 |</span></span><br><span class="line"><span class="params">| 05   |</span> 周梅   <span class="params">| 1991-12-01 00:00:00 |</span> 女   <span class="params">|       3 |</span>       <span class="number">3</span> <span class="params">|    NULL |</span>          <span class="number">3</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">03</span>   <span class="params">| 孙风   |</span> <span class="number">1990</span>-<span class="number">05</span>-<span class="number">20</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span>       <span class="number">1</span> <span class="params">|       4 |</span>       <span class="number">3</span> <span class="params">|          4 |</span></span><br><span class="line"><span class="params">| 02   |</span> 钱电   <span class="params">| 1990-12-21 00:00:00 |</span> 男   <span class="params">|       4 |</span>       <span class="number">5</span> <span class="params">|       3 |</span>          <span class="number">5</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">04</span>   <span class="params">| 李云   |</span> <span class="number">1990</span>-08-<span class="number">06</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span>       <span class="number">5</span> <span class="params">|       6 |</span>       <span class="number">6</span> <span class="params">|          6 |</span></span><br><span class="line"><span class="params">| 06   |</span> 吴兰   <span class="params">| 1992-03-01 00:00:00 |</span> 女   <span class="params">|       6 |</span>    NULL <span class="params">|       5 |</span>          <span class="number">7</span> <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+---------+---------+---------+------------+</span></span><br><span class="line"><span class="params">8 rows <span class="keyword">in</span> set (0.00 sec)</span></span><br></pre></td></tr></table></figure><p><strong>15.1 按平均成绩进行排序，显示总排名和各科排名，Score 重复时合并名次</strong></p><p>同样修改了一下题目。15题和15.1题的指向很明确了，就是rank()和dense_rank()的区别，也就是两个并列第一名之后的那个人是第三名(rank)还是第二名(dense_rank)的区别。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.*, rank_01, rank_02, rank_03, rank_total</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> sid, dense_rank(</span>) <span class="title">over</span>(<span class="params">partition <span class="keyword">by</span> cid order <span class="keyword">by</span> score desc</span>) <span class="keyword">as</span> rank_01 <span class="keyword">from</span> sc <span class="keyword">where</span> cid</span>=<span class="number">01</span>) A <span class="keyword">on</span> s.sid=A.sid</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> sid, dense_rank(</span>) <span class="title">over</span>(<span class="params">partition <span class="keyword">by</span> cid order <span class="keyword">by</span> score desc</span>) <span class="keyword">as</span> rank_02 <span class="keyword">from</span> sc <span class="keyword">where</span> cid</span>=<span class="number">02</span>) B <span class="keyword">on</span> s.sid=B.sid</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> sid, dense_rank(</span>) <span class="title">over</span>(<span class="params">partition <span class="keyword">by</span> cid order <span class="keyword">by</span> score desc</span>) <span class="keyword">as</span> rank_03 <span class="keyword">from</span> sc <span class="keyword">where</span> cid</span>=<span class="number">03</span>) C <span class="keyword">on</span> s.sid=C.sid</span><br><span class="line"><span class="function">left <span class="title">join</span> (<span class="params"><span class="keyword">select</span> sid, dense_rank(</span>) <span class="title">over</span>(<span class="params">order <span class="keyword">by</span> avg(score</span>) desc) <span class="keyword">as</span> rank_total <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> sid) D <span class="keyword">on</span> s.sid</span>=D.sid</span><br><span class="line">order <span class="keyword">by</span> rank_total asc</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+---------+---------+---------+------------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">| rank_01 |</span> rank_02 <span class="params">| rank_03 |</span> rank_total <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+---------+---------+---------+------------+</span></span><br><span class="line"><span class="params">|</span> 08   <span class="params">| 王菊   |</span> <span class="number">1990</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 女   |</span>    NULL <span class="params">|    NULL |</span>    NULL <span class="params">|       NULL |</span></span><br><span class="line"><span class="params">| 07   |</span> 郑竹   <span class="params">| 1989-07-01 00:00:00 |</span> 女   <span class="params">|    NULL |</span>       <span class="number">2</span> <span class="params">|       2 |</span>          <span class="number">1</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">01</span>   <span class="params">| 赵雷   |</span> <span class="number">1990</span>-<span class="number">01</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span>       <span class="number">1</span> <span class="params">|       1 |</span>       <span class="number">1</span> <span class="params">|          2 |</span></span><br><span class="line"><span class="params">| 05   |</span> 周梅   <span class="params">| 1991-12-01 00:00:00 |</span> 女   <span class="params">|       2 |</span>       <span class="number">3</span> <span class="params">|    NULL |</span>          <span class="number">3</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">03</span>   <span class="params">| 孙风   |</span> <span class="number">1990</span>-<span class="number">05</span>-<span class="number">20</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span>       <span class="number">1</span> <span class="params">|       4 |</span>       <span class="number">3</span> <span class="params">|          4 |</span></span><br><span class="line"><span class="params">| 02   |</span> 钱电   <span class="params">| 1990-12-21 00:00:00 |</span> 男   <span class="params">|       3 |</span>       <span class="number">5</span> <span class="params">|       3 |</span>          <span class="number">5</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">04</span>   <span class="params">| 李云   |</span> <span class="number">1990</span>-08-<span class="number">06</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span>       <span class="number">4</span> <span class="params">|       6 |</span>       <span class="number">5</span> <span class="params">|          6 |</span></span><br><span class="line"><span class="params">| 06   |</span> 吴兰   <span class="params">| 1992-03-01 00:00:00 |</span> 女   <span class="params">|       5 |</span>    NULL <span class="params">|       4 |</span>          <span class="number">7</span> <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+---------+---------+---------+------------+</span></span><br><span class="line"><span class="params">8 rows <span class="keyword">in</span> set (0.00 sec)</span></span><br></pre></td></tr></table></figure><p><strong>17. 统计各科成绩各分数段人数：课程编号，课程名称，[100-85]，[85-70]，[70-60]，[60-0] 及所占百分比</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> c.cid <span class="keyword">as</span> 课程编号, c.cname <span class="keyword">as</span> 课程名称, A.*</span><br><span class="line"><span class="keyword">from</span> course <span class="keyword">as</span> c,</span><br><span class="line">(<span class="keyword">select</span> cid,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> score &gt;= <span class="number">85</span> then <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> end)/count(*) <span class="keyword">as</span> <span class="number">100</span>_85,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> score &gt;= <span class="number">70</span> and score &lt; <span class="number">85</span> then <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> end)/count(*) <span class="keyword">as</span> <span class="number">85</span>_70,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> score &gt;= <span class="number">60</span> and score &lt; <span class="number">70</span> then <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> end)/count(*) <span class="keyword">as</span> <span class="number">70</span>_60,</span><br><span class="line">    sum(<span class="keyword">case</span> <span class="keyword">when</span> score &lt; <span class="number">60</span> then <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> end)/count(*) <span class="keyword">as</span> <span class="number">60</span>_0</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cid) <span class="keyword">as</span> A</span><br><span class="line"><span class="keyword">where</span> c.cid = A.cid</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+--------------+--------------+------+--------+--------+--------+--------+</span><br><span class="line"><span class="params">| 课程编号     |</span> 课程名称      <span class="params">| cid  |</span> <span class="number">100_85</span> <span class="params">| 85_70  |</span> <span class="number">70_60</span>  <span class="params">| 60_0   |</span></span><br><span class="line">+--------------+--------------+------+--------+--------+--------+--------+</span><br><span class="line"><span class="params">| 01           |</span> 语文         <span class="params">| 01   |</span> <span class="number">0</span>.<span class="number">0000</span> <span class="params">| 0.6667 |</span> <span class="number">0</span>.<span class="number">0000</span> <span class="params">| 0.3333 |</span></span><br><span class="line"><span class="params">| 02           |</span> 数学         <span class="params">| 02   |</span> <span class="number">0</span>.<span class="number">5000</span> <span class="params">| 0.1667 |</span> <span class="number">0</span>.<span class="number">1667</span> <span class="params">| 0.1667 |</span></span><br><span class="line"><span class="params">| 03           |</span> 英语         <span class="params">| 03   |</span> <span class="number">0</span>.<span class="number">3333</span> <span class="params">| 0.3333 |</span> <span class="number">0</span>.<span class="number">0000</span> <span class="params">| 0.3333 |</span></span><br><span class="line">+--------------+--------------+------+--------+--------+--------+--------+</span><br><span class="line"><span class="number">3</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>18. 查询各科成绩前三名的记录</strong></p><p>这是我比较喜欢的一道题目，非常经典。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> *, rank() over(partition <span class="keyword">by</span> cid order <span class="keyword">by</span> score desc) <span class="keyword">as</span> graderank <span class="keyword">from</span> sc) A </span><br><span class="line"><span class="keyword">where</span> A.graderank &lt;= <span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">| Sid  |</span> Cid  <span class="params">| score |</span> graderank <span class="params">|</span></span><br><span class="line"><span class="params">+------+------+-------+-----------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">01</span>   <span class="params">| 01   |</span>  <span class="number">80.0</span> <span class="params">|         1 |</span></span><br><span class="line"><span class="params">| 03   |</span> <span class="number">01</span>   <span class="params">|  80.0 |</span>         <span class="number">1</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">05</span>   <span class="params">| 01   |</span>  <span class="number">76.0</span> <span class="params">|         3 |</span></span><br><span class="line"><span class="params">| 01   |</span> <span class="number">02</span>   <span class="params">|  90.0 |</span>         <span class="number">1</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">07</span>   <span class="params">| 02   |</span>  <span class="number">89.0</span> <span class="params">|         2 |</span></span><br><span class="line"><span class="params">| 05   |</span> <span class="number">02</span>   <span class="params">|  87.0 |</span>         <span class="number">3</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">01</span>   <span class="params">| 03   |</span>  <span class="number">99.0</span> <span class="params">|         1 |</span></span><br><span class="line"><span class="params">| 07   |</span> <span class="number">03</span>   <span class="params">|  98.0 |</span>         <span class="number">2</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">02</span>   <span class="params">| 03   |</span>  <span class="number">80.0</span> <span class="params">|         3 |</span></span><br><span class="line"><span class="params">| 03   |</span> <span class="number">03</span>   <span class="params">|  80.0 |</span>         <span class="number">3</span> <span class="params">|</span></span><br><span class="line"><span class="params">+------+------+-------+-----------+</span></span><br><span class="line"><span class="params">10 rows <span class="keyword">in</span> set (0.00 sec)</span></span><br></pre></td></tr></table></figure><p><strong>20. 查询出只选修两门课程的学生学号和姓名</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.sid, s.sname, count(cid)</span><br><span class="line"><span class="keyword">from</span> student s, sc</span><br><span class="line"><span class="keyword">where</span> s.sid = sc.sid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sid</span><br><span class="line"><span class="function">having <span class="title">count</span>(<span class="params">cid</span>)</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+------------+</span><br><span class="line"><span class="params">| sid  |</span> sname  <span class="params">| count(cid) |</span></span><br><span class="line">+------+--------+------------+</span><br><span class="line"><span class="params">| 05   |</span> 周梅   <span class="params">|          2 |</span></span><br><span class="line"><span class="params">| 06   |</span> 吴兰   <span class="params">|          2 |</span></span><br><span class="line"><span class="params">| 07   |</span> 郑竹   <span class="params">|          2 |</span></span><br><span class="line">+------+--------+------------+</span><br><span class="line"><span class="number">3</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>22. 查询名字中含有「风」字的学生信息</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> sname like <span class="string">'%风%'</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">03</span>   <span class="params">| 孙风   |</span> <span class="number">1990</span>-<span class="number">05</span>-<span class="number">20</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>24. 查询 1990 年出生的学生名单</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="keyword">where</span> <span class="title">year</span>(<span class="params">sage</span>)</span> = <span class="number">1990</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">01</span>   <span class="params">| 赵雷   |</span> <span class="number">1990</span>-<span class="number">01</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line"><span class="params">| 02   |</span> 钱电   <span class="params">| 1990-12-21 00:00:00 |</span> 男   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> <span class="number">03</span>   <span class="params">| 孙风   |</span> <span class="number">1990</span>-<span class="number">05</span>-<span class="number">20</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line"><span class="params">| 04   |</span> 李云   <span class="params">| 1990-08-06 00:00:00 |</span> 男   <span class="params">|</span></span><br><span class="line"><span class="params">|</span> 08   <span class="params">| 王菊   |</span> <span class="number">1990</span>-<span class="number">01</span>-<span class="number">20</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 女   |</span></span><br><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="number">5</span> rows <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>33. 成绩不重复，查询选修「张三」老师所授课程的学生中，成绩最高的学生信息及其成绩</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select s.*, <span class="built_in">max</span>(score)</span><br><span class="line">from student s, teacher t, course <span class="built_in">c</span>, sc</span><br><span class="line"><span class="keyword">where</span> s.sid = sc.sid</span><br><span class="line">    and sc.cid = <span class="built_in">c</span>.cid</span><br><span class="line">    and <span class="built_in">c</span>.tid = t.tid</span><br><span class="line">    and t.tname = '张三'</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+------------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">| max(score) |</span></span><br><span class="line">+------+--------+---------------------+------+------------+</span><br><span class="line"><span class="params">| 01   |</span> 赵雷   <span class="params">| 1990-01-01 00:00:00 |</span> 男   <span class="params">|       90.0 |</span></span><br><span class="line">+------+--------+---------------------+------+------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>34. 成绩有重复的情况下，查询选修「张三」老师所授课程的学生中，成绩最高的学生信息及其成绩</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> *, DENSE_RANK() over (order <span class="keyword">by</span> score desc) A</span><br><span class="line">    <span class="keyword">from</span> SC</span><br><span class="line">    <span class="keyword">where</span> Cid = (<span class="keyword">select</span> Cid <span class="keyword">from</span> Course <span class="keyword">where</span> Tid=(<span class="keyword">select</span> Tid <span class="keyword">from</span> Teacher <span class="keyword">where</span> Tname=<span class="string">'张三'</span>))</span><br><span class="line">) B</span><br><span class="line"><span class="keyword">where</span> B.A=<span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+------+------+-------+---+</span><br><span class="line"><span class="params">| Sid  |</span> Cid  <span class="params">| score |</span> A <span class="params">|</span></span><br><span class="line"><span class="params">+------+------+-------+---+</span></span><br><span class="line"><span class="params">|</span> <span class="number">01</span>   <span class="params">| 02   |</span>  <span class="number">90.0</span> <span class="params">| 1 |</span></span><br><span class="line">+------+------+-------+---+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>40. 查询各学生的年龄，只按年份来算</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname, year(now())-year(sage) <span class="keyword">as</span> age <span class="keyword">from</span> student</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">+--------+------+</span><br><span class="line"><span class="params">| sname  |</span> age  <span class="params">|</span></span><br><span class="line"><span class="params">+--------+------+</span></span><br><span class="line"><span class="params">|</span> 赵雷   <span class="params">|   28 |</span></span><br><span class="line"><span class="params">| 钱电   |</span>   <span class="number">28</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> 孙风   <span class="params">|   28 |</span></span><br><span class="line"><span class="params">| 李云   |</span>   <span class="number">28</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> 周梅   <span class="params">|   27 |</span></span><br><span class="line"><span class="params">| 吴兰   |</span>   <span class="number">26</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> 郑竹   <span class="params">|   29 |</span></span><br><span class="line"><span class="params">| 王菊   |</span>   <span class="number">28</span> <span class="params">|</span></span><br><span class="line"><span class="params">+--------+------+</span></span><br><span class="line"><span class="params">8 rows <span class="keyword">in</span> set (0.00 sec)</span></span><br></pre></td></tr></table></figure><p><strong>41. 按照出生日期来算，当前月日 &lt; 出生年月的月日则，年龄减一</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname, timestampdiff(year, sage, now()) <span class="keyword">as</span> age <span class="keyword">from</span> student</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">+--------+------+</span><br><span class="line"><span class="params">| sname  |</span> age  <span class="params">|</span></span><br><span class="line"><span class="params">+--------+------+</span></span><br><span class="line"><span class="params">|</span> 赵雷   <span class="params">|   28 |</span></span><br><span class="line"><span class="params">| 钱电   |</span>   <span class="number">27</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> 孙风   <span class="params">|   28 |</span></span><br><span class="line"><span class="params">| 李云   |</span>   <span class="number">27</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> 周梅   <span class="params">|   26 |</span></span><br><span class="line"><span class="params">| 吴兰   |</span>   <span class="number">26</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> 郑竹   <span class="params">|   29 |</span></span><br><span class="line"><span class="params">| 王菊   |</span>   <span class="number">28</span> <span class="params">|</span></span><br><span class="line"><span class="params">+--------+------+</span></span><br><span class="line"><span class="params">8 rows <span class="keyword">in</span> set (0.00 sec)</span></span><br></pre></td></tr></table></figure><p><strong>42. 查询本周过生日的学生</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="keyword">where</span> <span class="title">week</span>(<span class="params">now(</span>))</span> = week(sage)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Empty <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>43. 查询下周过生日的学生</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="title">where</span> (<span class="params">week(now(</span>))+1)</span> = week(sage)</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">04</span>   <span class="params">| 李云   |</span> <span class="number">1990</span>-08-<span class="number">06</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>44. 查询本月过生日的学生</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="keyword">where</span> <span class="title">month</span>(<span class="params">now(</span>))</span> = month(sage)</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">07</span>   <span class="params">| 郑竹   |</span> <span class="number">1989</span>-<span class="number">07</span>-<span class="number">01</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 女   |</span></span><br><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>45. 查询下月过生日的学生</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="title">where</span> (<span class="params">month(now(</span>))+1)</span> = month(sage)</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="params">| Sid  |</span> Sname  <span class="params">| Sage                |</span> Ssex <span class="params">|</span></span><br><span class="line"><span class="params">+------+--------+---------------------+------+</span></span><br><span class="line"><span class="params">|</span> <span class="number">04</span>   <span class="params">| 李云   |</span> <span class="number">1990</span>-08-<span class="number">06</span> <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="params">| 男   |</span></span><br><span class="line">+------+--------+---------------------+------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;1. 用一条SQL 语句 查询出每门课都大于80 分的学生姓名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;name   course grade&lt;br&gt; 张三    语文       81&lt;br&gt; 张三     数学       75&lt;br&gt; 李四     语文   
      
    
    </summary>
    
    
      <category term="SQL" scheme="http://yoursite.com/categories/SQL/"/>
    
    
      <category term="SQL语句练习" scheme="http://yoursite.com/tags/SQL%E8%AF%AD%E5%8F%A5%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>HashMap执行流程</title>
    <link href="http://yoursite.com/2020/04/10/HashMap%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/04/10/HashMap%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B/</id>
    <published>2020-04-10T02:55:36.000Z</published>
    <updated>2020-04-10T05:50:07.384Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HashMap初始化"><a href="#HashMap初始化" class="headerlink" title="HashMap初始化"></a>HashMap初始化</h2><p>创建一个测试方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashMapTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;String, Integer&gt; hashMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        hashMap.put(<span class="string">"K1"</span>,<span class="number">1</span>);</span><br><span class="line">        hashMap.get(<span class="string">"K1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先会调用HashMap方法,构建一个空的HashMap。默认初始容量 （16）和负载因子（0.75）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.loadFactor = DEFAULT_LOAD_FACTOR; <span class="comment">// 所有其他字段默认</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后调用它唯一的构造函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="title">AbstractMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="put操作"><a href="#put操作" class="headerlink" title="put操作"></a>put操作</h2><p>因为我们Value使用的是Integer类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">返回一个&#123;<span class="doctag">@code</span> Integer&#125;实例，表示指定的 &#123;<span class="doctag">@code</span> int&#125;值。</span></span><br><span class="line"><span class="comment">如果一个新的&#123;<span class="doctag">@code</span> Integer&#125;实例不是*必需的，那么通常应该优先使用这个方法，</span></span><br><span class="line"><span class="comment">而不是构造函数&#123;<span class="doctag">@link</span> #Integer(int)&#125;，因为通过缓存频繁请求的值，这个方法很可能产生更好的空间和时间性能。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">此方法将始终缓存-128到127(包括*)范围内的值，并可能缓存此范围之外的其他值。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">valueOf</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)</span><br><span class="line">            <span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Integer(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这是一个Integer类型</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> value;</span><br></pre></td></tr></table></figure><p>实现了put和相关的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">final</span> V <span class="title">putVal</span><span class="params">(<span class="keyword">int</span> hash, K key, V value, <span class="keyword">boolean</span> onlyIfAbsent,</span></span></span><br><span class="line"><span class="function"><span class="params">                   <span class="keyword">boolean</span> evict)</span> </span>&#123;</span><br><span class="line">        Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class="keyword">int</span> n, i;</span><br><span class="line">        <span class="keyword">if</span> ((tab = table) == <span class="keyword">null</span> || (n = tab.length) == <span class="number">0</span>)</span><br><span class="line">            n = (tab = resize()).length;</span><br><span class="line">        <span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="keyword">null</span>)</span><br><span class="line">            tab[i] = newNode(hash, key, value, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            Node&lt;K,V&gt; e; K k;</span><br><span class="line">            <span class="keyword">if</span> (p.hash == hash &amp;&amp;</span><br><span class="line">                ((k = p.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                e = p;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(<span class="keyword">this</span>, tab, hash, key, value);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> binCount = <span class="number">0</span>; ; ++binCount) &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((e = p.next) == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        p.next = newNode(hash, key, value, <span class="keyword">null</span>);</span><br><span class="line">                        <span class="keyword">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class="number">1</span>) <span class="comment">// -1 for 1st</span></span><br><span class="line">                            treeifyBin(tab, hash);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                        ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    p = e;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (e != <span class="keyword">null</span>) &#123; <span class="comment">// existing mapping for key</span></span><br><span class="line">                V oldValue = e.value;</span><br><span class="line">                <span class="keyword">if</span> (!onlyIfAbsent || oldValue == <span class="keyword">null</span>)</span><br><span class="line">                    e.value = value;</span><br><span class="line">                afterNodeAccess(e);</span><br><span class="line">                <span class="keyword">return</span> oldValue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ++modCount;</span><br><span class="line">        <span class="keyword">if</span> (++size &gt; threshold)</span><br><span class="line">            resize();</span><br><span class="line">        afterNodeInsertion(evict);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HashMap初始化&quot;&gt;&lt;a href=&quot;#HashMap初始化&quot; class=&quot;headerlink&quot; title=&quot;HashMap初始化&quot;&gt;&lt;/a&gt;HashMap初始化&lt;/h2&gt;&lt;p&gt;创建一个测试方法&lt;/p&gt;
&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
      <category term="Java基础" scheme="http://yoursite.com/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="HashMap执行流程" scheme="http://yoursite.com/tags/HashMap%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Yigo-杂七杂八</title>
    <link href="http://yoursite.com/2020/03/27/Yigo-%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    <id>http://yoursite.com/2020/03/27/Yigo-%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/</id>
    <published>2020-03-27T08:19:53.000Z</published>
    <updated>2020-03-30T13:00:50.707Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-表单单据编号"><a href="#一-表单单据编号" class="headerlink" title="一  表单单据编号"></a>一  表单单据编号</h2><p><strong>创建一张实体表单</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_11.jpg" alt=""></p><p><strong>在数据源上找到 “编号前缀” 进行设置</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_12.jpg" alt=""></p><p><strong>通过对 “单据编号” 设置 “查询” ,  生成采购单的视图表单</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_13.jpg" alt=""></p><p><strong>运行查看效果</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_14.jpg" alt=""></p><h2 id="二-检查规则和可见性可用性"><a href="#二-检查规则和可见性可用性" class="headerlink" title="二  检查规则和可见性可用性"></a>二  检查规则和可见性可用性</h2><p><strong>点击物料单元格 ,  在单元格属性中找到检查规则进行设置</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_15.jpg" alt=""></p><p><strong>在设置单元格或者控件属性中的可用性和可见性</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_17.jpg" alt=""></p><p><strong>设置总价的默认公式</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_16.jpg" alt=""></p><p><strong>添加采购单总价</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_22.jpg" alt=""></p><h2 id="四-数据映射"><a href="#四-数据映射" class="headerlink" title="四  数据映射"></a>四  数据映射</h2><p><strong>编辑采购单 ,  添加需要字段</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_23.jpg" alt=""></p><p><strong>创建入库表 ,  添加必要字段 ,  并生成入库单视图</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_24.jpg" alt=""></p><p><strong>创建采购单与入库单数据映射</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_25.jpg" alt=""></p><p><strong>进行数据映射</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_26.jpg" alt=""></p><p><strong>运行查看效果</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_27.jpg" alt=""></p><p><strong>点击下推入库单</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_28.jpg" alt=""></p><h2 id="五-上引下推"><a href="#五-上引下推" class="headerlink" title="五  上引下推"></a>五  上引下推</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一-表单单据编号&quot;&gt;&lt;a href=&quot;#一-表单单据编号&quot; class=&quot;headerlink&quot; title=&quot;一  表单单据编号&quot;&gt;&lt;/a&gt;一  表单单据编号&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;创建一张实体表单&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;h
      
    
    </summary>
    
    
      <category term="Yigo-基础" scheme="http://yoursite.com/categories/Yigo-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="表单单据编号,检查规则和可见性可用性,函数,数据映射,上引下推,数据迁移,期间分组,业务审批流程,报表制作" scheme="http://yoursite.com/tags/%E8%A1%A8%E5%8D%95%E5%8D%95%E6%8D%AE%E7%BC%96%E5%8F%B7-%E6%A3%80%E6%9F%A5%E8%A7%84%E5%88%99%E5%92%8C%E5%8F%AF%E8%A7%81%E6%80%A7%E5%8F%AF%E7%94%A8%E6%80%A7-%E5%87%BD%E6%95%B0-%E6%95%B0%E6%8D%AE%E6%98%A0%E5%B0%84-%E4%B8%8A%E5%BC%95%E4%B8%8B%E6%8E%A8-%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB-%E6%9C%9F%E9%97%B4%E5%88%86%E7%BB%84-%E4%B8%9A%E5%8A%A1%E5%AE%A1%E6%89%B9%E6%B5%81%E7%A8%8B-%E6%8A%A5%E8%A1%A8%E5%88%B6%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>表格</title>
    <link href="http://yoursite.com/2020/03/27/%E8%A1%A8%E6%A0%BC/"/>
    <id>http://yoursite.com/2020/03/27/%E8%A1%A8%E6%A0%BC/</id>
    <published>2020-03-27T02:17:58.000Z</published>
    <updated>2020-03-27T05:02:46.893Z</updated>
    
    <content type="html"><![CDATA[<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>*<em>添加表格控件,   关联表选择 “新增表” *</em></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_01.jpg" alt=""></p><p>详细参考 :  <a href="http://insomnia.ltd/2020/03/25/Yigo-实体表单与数据源/" target="_blank" rel="noopener">实体表单与数据源</a></p><h2 id="表格分组"><a href="#表格分组" class="headerlink" title="表格分组"></a>表格分组</h2><p><strong>新建一行,  作为分组行,  选择  “所属分组标识”</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_03.jpg" alt=""></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_02.jpg" alt=""></p><p><strong>运行查看效果</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_04.jpg" alt=""></p><h2 id="表格汇总"><a href="#表格汇总" class="headerlink" title="表格汇总"></a>表格汇总</h2><p><strong>新建一行 ,  插入汇总行</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_05.jpg" alt=""></p><p><strong>添加汇总值</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_06.jpg" alt=""></p><p><strong>运行查看效果</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_07.jpg" alt=""></p><h2 id="表格列扩招"><a href="#表格列扩招" class="headerlink" title="表格列扩招"></a>表格列扩招</h2><p><strong>添加子列</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_08.jpg" alt=""></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_09.jpg" alt=""></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_27_10.jpg" alt=""></p><p><strong>运行查看效果</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;表格&quot;&gt;&lt;a href=&quot;#表格&quot; class=&quot;headerlink&quot; title=&quot;表格&quot;&gt;&lt;/a&gt;表格&lt;/h2&gt;&lt;p&gt;*&lt;em&gt;添加表格控件,   关联表选择 “新增表” *&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/z
      
    
    </summary>
    
    
      <category term="Yigo-基础" scheme="http://yoursite.com/categories/Yigo-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="表格" scheme="http://yoursite.com/tags/%E8%A1%A8%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>字典-下拉框-单选框</title>
    <link href="http://yoursite.com/2020/03/26/%E5%AD%97%E5%85%B8-%E4%B8%8B%E6%8B%89%E6%A1%86-%E5%8D%95%E9%80%89%E6%A1%86/"/>
    <id>http://yoursite.com/2020/03/26/%E5%AD%97%E5%85%B8-%E4%B8%8B%E6%8B%89%E6%A1%86-%E5%8D%95%E9%80%89%E6%A1%86/</id>
    <published>2020-03-26T06:38:34.000Z</published>
    <updated>2020-03-26T08:54:37.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-普通字典"><a href="#一-普通字典" class="headerlink" title="一  普通字典"></a>一  普通字典</h2><p><strong>创建一张表单 ,  表单类型为”字典”</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_01.jpg" alt=""></p><p><strong>运行后添加字典数据</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_02.jpg" alt=""></p><p><strong>创建一张普通表单,用于定义之前创建的字典</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_03.jpg" alt=""></p><p><strong>在右栏的字典属性中绑定字典表示</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_04.jpg" alt=""></p><p><strong>保存运行查看效果</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_05.jpg" alt=""></p><h2 id="二-父子字典"><a href="#二-父子字典" class="headerlink" title="二  父子字典"></a>二  父子字典</h2><p><strong>创建一个仓库字典</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_06.jpg" alt=""></p><p><strong>在运行模式中输入字典数据 ,  并根据数据之间的层级关系区分汇总节点和明细节点</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_07.jpg" alt=""></p><p><strong>回到表单界面 ,  定义一个父仓库字典 ,与子仓库字典</strong> </p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_08.jpg" alt=""></p><p><strong>运行查看效果</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_09.jpg" alt=""></p><h2 id="三-字典过滤"><a href="#三-字典过滤" class="headerlink" title="三  字典过滤"></a>三  字典过滤</h2><p><strong>没有设置字典过滤之前 ,  在父仓库字典中还是可以看见明细节点的数据</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_10.jpg" alt=""></p><p><strong>在父仓库字典中设置字典过滤</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_10.jpg" alt=""></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_11.jpg" alt=""></p><h2 id="四-下拉框"><a href="#四-下拉框" class="headerlink" title="四  下拉框"></a>四  下拉框</h2><p><strong>本次主要讲述下拉框的下拉项来源和状态集合的设置</strong></p><h4 id="1-下拉项来源为-“固定值”-的设置"><a href="#1-下拉项来源为-“固定值”-的设置" class="headerlink" title="1  下拉项来源为 “固定值” 的设置"></a>1  下拉项来源为 “固定值” 的设置</h4><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_12.jpg" alt=""></p><p><strong>运行查看效果</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_13.jpg" alt=""></p><h4 id="2-下拉项来源为-“状态集合”-的设置"><a href="#2-下拉项来源为-“状态集合”-的设置" class="headerlink" title="2  下拉项来源为 “状态集合” 的设置"></a>2  下拉项来源为 “状态集合” 的设置</h4><p><strong>首先将下拉项来源设为 “状态集合”</strong> </p><p><strong>然后进入CommounDef.xml,添加状态</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_14.jpg" alt=""></p><p><strong>运行查看效果</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_26_15.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一-普通字典&quot;&gt;&lt;a href=&quot;#一-普通字典&quot; class=&quot;headerlink&quot; title=&quot;一  普通字典&quot;&gt;&lt;/a&gt;一  普通字典&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;创建一张表单 ,  表单类型为”字典”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src
      
    
    </summary>
    
    
      <category term="Yigo-基础" scheme="http://yoursite.com/categories/Yigo-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="字典-下拉框-单选框" scheme="http://yoursite.com/tags/%E5%AD%97%E5%85%B8-%E4%B8%8B%E6%8B%89%E6%A1%86-%E5%8D%95%E9%80%89%E6%A1%86/"/>
    
  </entry>
  
  <entry>
    <title>Yigo-实体表单与数据源</title>
    <link href="http://yoursite.com/2020/03/25/Yigo-%E5%AE%9E%E4%BD%93%E8%A1%A8%E5%8D%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    <id>http://yoursite.com/2020/03/25/Yigo-%E5%AE%9E%E4%BD%93%E8%A1%A8%E5%8D%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%BA%90/</id>
    <published>2020-03-25T03:55:50.000Z</published>
    <updated>2020-03-27T02:20:17.311Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建实体表单"><a href="#创建实体表单" class="headerlink" title="创建实体表单"></a>创建实体表单</h2><p><strong>右击–&gt;创建工程</strong><br><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_1.jpg" alt=""><br><strong>填写标识、名称</strong><br><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_02.jpg" alt=""><br><strong>点击确定</strong><br><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_03.jpg" alt=""><br><strong>右击表单–&gt;创建表单</strong><br><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_04.jpg" alt=""><br><strong>填写信息</strong><br><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_05.jpg" alt=""></p><p>实体表单套用模板会自带一些控件，查看右边区域可设置各个控件的属性<br><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_06.jpg" alt=""></p><p>选中单据编号，在右边属性栏中“查询属性”选择“是”，保存之后可自动生成视图单据，且视图单据可自动添加到“Entry菜单”中</p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_07.jpg" alt=""></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_08.jpg" alt=""></p><h2 id="实体表单与数据源"><a href="#实体表单与数据源" class="headerlink" title="实体表单与数据源"></a>实体表单与数据源</h2><p><strong>打开之前创建的表单，查看数据源</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_09.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对于单独的控件，会自动生成数据源里的字段，但对于明细表中的表格，则需要手动添加数据源字段</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_10.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在界面查看控件与数据表标识和数据列标识的绑定情况，如果没有绑定，则进行手动绑定</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_11.jpg" alt=""></p><p>绑定后，运行查看</p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_12.jpg" alt=""></p><h2 id="虚拟表单-视图-与数据源"><a href="#虚拟表单-视图-与数据源" class="headerlink" title="虚拟表单(视图)与数据源"></a>虚拟表单(视图)与数据源</h2><p><strong>打开实体表单视图（虚拟表单），查看起数据源</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_13.jpg" alt=""></p><p><strong>添加需要在视图中显示的字段，此处为单据日期和单据状态</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_14.jpg" alt=""></p><p><strong>在界面绑定列表视图中的列和数据列标识</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_15.jpg" alt=""></p><p><strong>保存后,  运行查看效果</strong></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/Yigo_03_25_16.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;创建实体表单&quot;&gt;&lt;a href=&quot;#创建实体表单&quot; class=&quot;headerlink&quot; title=&quot;创建实体表单&quot;&gt;&lt;/a&gt;创建实体表单&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;右击–&amp;gt;创建工程&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;https://gite
      
    
    </summary>
    
    
      <category term="Yigo-基础" scheme="http://yoursite.com/categories/Yigo-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="实体表单与数据源" scheme="http://yoursite.com/tags/%E5%AE%9E%E4%BD%93%E8%A1%A8%E5%8D%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>yml配置文件值获取</title>
    <link href="http://yoursite.com/2020/03/21/yml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%80%BC%E8%8E%B7%E5%8F%96/"/>
    <id>http://yoursite.com/2020/03/21/yml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%80%BC%E8%8E%B7%E5%8F%96/</id>
    <published>2020-03-21T12:14:33.000Z</published>
    <updated>2020-03-21T12:35:31.602Z</updated>
    
    <content type="html"><![CDATA[<h4 id="配置类："><a href="#配置类：" class="headerlink" title="配置类："></a>配置类：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"person"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="引入依赖："><a href="#引入依赖：" class="headerlink" title="引入依赖："></a>引入依赖：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="yml"><a href="#yml" class="headerlink" title="yml:"></a>yml:</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">person:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">张三</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">13</span></span><br><span class="line">  <span class="attr">sex:</span> <span class="string">男</span></span><br></pre></td></tr></table></figure><h4 id="亦或者配置类："><a href="#亦或者配置类：" class="headerlink" title="亦或者配置类："></a>亦或者配置类：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"李四"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"14"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"男"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>@ConfigurationProperties</th><th></th></tr></thead><tbody><tr><td>功能</td><td>批量注入配置文件中的属性</td><td>指定属性注入</td></tr><tr><td>松散绑定（松散语法）</td><td>支持</td><td>不支持</td></tr><tr><td>SpEL表达式</td><td>不支持</td><td>支持</td></tr><tr><td>JSR303数据校验</td><td>支持</td><td>不支持</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;配置类：&quot;&gt;&lt;a href=&quot;#配置类：&quot; class=&quot;headerlink&quot; title=&quot;配置类：&quot;&gt;&lt;/a&gt;配置类：&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="Spring Boot" scheme="http://yoursite.com/categories/Spring-Boot/"/>
    
    
      <category term="yml" scheme="http://yoursite.com/tags/yml/"/>
    
  </entry>
  
  <entry>
    <title>ConcurrentHashMap-HashTable</title>
    <link href="http://yoursite.com/2020/03/20/ConcurrentHashMap-HashTable/"/>
    <id>http://yoursite.com/2020/03/20/ConcurrentHashMap-HashTable/</id>
    <published>2020-03-20T13:10:54.000Z</published>
    <updated>2020-03-21T10:30:40.410Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HashMap的线程安全问题，怎么处理"><a href="#HashMap的线程安全问题，怎么处理" class="headerlink" title="HashMap的线程安全问题，怎么处理"></a>HashMap的线程安全问题，怎么处理</h2><p>一般在多线程的场景，会用好几种不同的方式去代替：</p><ul><li>使用Collections.synchronizedMap(Map)创建线程安全的map集合；</li><li>Hashtable</li><li>ConcurrentHashMap</li></ul><p>不过出于线程并发度的原因，都会舍弃前两者使用最后的ConcurrentHashMap，它的性能和效率明显高于前两者。</p><h3 id="Collections-synchronizedMap"><a href="#Collections-synchronizedMap" class="headerlink" title="Collections.synchronizedMap"></a>Collections.synchronizedMap</h3><p>在SynchronizedMap内部维护了一个普通对象Map，还有排斥锁mutex，如图</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/uChmeeX1FpyhVLAW08sszrgEKUamuEKRYfOvAN7JoEXvgu88icnh5fso9DWDTbJZW21GvVyZpDaCw24EuaaxWZw/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt=""></p><p>我们在调用这个方法的时候就需要传入一个Map，可以看到有两个构造器，如果你传入了mutex参数，则将对象排斥锁赋值为传入的对象。</p><p>如果没有，则将对象排斥锁赋值为this，即调用synchronizedMap的对象，就是上面的Map。</p><p>创建出synchronizedMap之后，再操作map的时候，就会对方法上锁，如图全是🔐</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/uChmeeX1FpyhVLAW08sszrgEKUamuEKRgG8CTU8Uj4k0djWqQiaiayXO7H3WTTUN0v0jegVsj8fxBcCcIl4XAmqg/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt=""></p><h3 id="HashTable"><a href="#HashTable" class="headerlink" title="HashTable"></a>HashTable</h3><p>跟HashMap相比Hashtable是线程安全的，适合在多线程的情况下使用，但是效率可不太乐观。</p><p>他在对数据操作的时候都会上锁，所以效率比较低下。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/uChmeeX1FpyhVLAW08sszrgEKUamuEKR5TBac6DgWoozh2ovicuHVgiaiaRWaulhvC5Tw2ssAbzXsG6Nk5vwYGqcQ/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt=""></p><h4 id="与HashMap的不同点"><a href="#与HashMap的不同点" class="headerlink" title="与HashMap的不同点"></a>与HashMap的不同点</h4><ul><li><p><strong>实现方式不同</strong>：Hashtable 继承了 Dictionary类，而 HashMap 继承的是 AbstractMap 类。</p><p>Dictionary 是 JDK 1.0 添加的，貌似没人用过这个，我也没用过。</p></li><li><p><strong>初始化容量不同</strong>：HashMap 的初始容量为：16，Hashtable 初始容量为：11，两者的负载因子默认都是：0.75。</p></li><li><p><strong>扩容机制不同</strong>：当现有容量大于总容量 * 负载因子时，HashMap 扩容规则为当前容量翻倍，Hashtable 扩容规则为当前容量翻倍 + 1。</p></li><li><p><strong>迭代器不同</strong>：HashMap 中的 Iterator 迭代器是 fail-fast 的，而 Hashtable 的 Enumerator 不是 fail-fast 的。</p><p>所以，当其他线程改变了HashMap 的结构，如：增加、删除元素，将会抛出ConcurrentModificationException 异常，而 Hashtable 则不会。</p></li></ul><h4 id="fail-fast"><a href="#fail-fast" class="headerlink" title="fail-fast"></a>fail-fast</h4><p><strong>快速失败（fail—fast）</strong>是java集合中的一种机制， 在用迭代器遍历一个集合对象时，如果遍历过程中对集合对象的内容进行了修改（增加、删除、修改），则会抛出Concurrent Modification Exception。</p><p><strong>原理</strong>：</p><p>迭代器在遍历时直接访问集合中的内容，并且在遍历过程中使用一个 modCount 变量。</p><p>集合在被遍历期间如果内容发生变化，就会改变modCount的值。</p><p>每当迭代器使用hashNext()/next()遍历下一个元素之前，都会检测modCount变量是否为expectedmodCount值，是的话就返回遍历；否则抛出异常，终止遍历。</p><p><strong>Tip</strong>：这里异常的抛出条件是检测到 modCount！=expectedmodCount 这个条件。如果集合发生变化时修改modCount值刚好又设置为了expectedmodCount值，则异常不会抛出。</p><p>因此，不能依赖于这个异常是否抛出而进行并发操作的编程，这个异常只建议用于检测并发修改的bug。</p><p><strong>场景：</strong></p><p>java.util包下的集合类都是快速失败的，不能在多线程下发生并发修改（迭代过程中被修改）算是一种安全机制吧。</p><p><strong>Tip</strong>：<strong>安全失败（fail—safe）</strong>大家也可以了解下，java.util.concurrent包下的容器都是安全失败，可以在多线程下并发使用，并发修改。</p><h3 id="ConcurrentHashMap"><a href="#ConcurrentHashMap" class="headerlink" title="ConcurrentHashMap"></a>ConcurrentHashMap</h3><p>HashMap 底层是基于 <code>数组 + 链表</code> 组成的，不过在 jdk1.7 和 1.8 中具体实现稍有不同。</p><p>我先说一下他在1.7中的数据结构吧：</p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/map2020_3_21_1.jpg" alt=""></p><p>如图所示，是由 Segment 数组、HashEntry 组成，和 HashMap 一样，仍然是<strong>数组加链表</strong>。</p><p>Segment 是 ConcurrentHashMap 的一个内部类，主要的组成如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Segment</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">extends</span> <span class="title">ReentrantLock</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">2249069246763182397L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 和 HashMap 中的 HashEntry 作用一样，真正存放数据的桶</span></span><br><span class="line">    <span class="keyword">transient</span> <span class="keyword">volatile</span> HashEntry&lt;K,V&gt;[] table;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">transient</span> <span class="keyword">int</span> count;</span><br><span class="line">        <span class="comment">// 记得快速失败（fail—fast）么？</span></span><br><span class="line">    <span class="keyword">transient</span> <span class="keyword">int</span> modCount;</span><br><span class="line">        <span class="comment">// 大小</span></span><br><span class="line">    <span class="keyword">transient</span> <span class="keyword">int</span> threshold;</span><br><span class="line">        <span class="comment">// 负载因子</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">float</span> loadFactor;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>HashEntry跟HashMap差不多的，但是不同点是，他使用volatile去修饰了他的数据Value还有下一个节点next。</p><h4 id="volatile的特性"><a href="#volatile的特性" class="headerlink" title="volatile的特性"></a>volatile的特性</h4><ul><li>保证了不同线程对这个变量进行操作时的可见性，即一个线程修改了某个变量的值，这新值对其他线程来说是立即可见的。（实现可见性）</li><li>禁止进行指令重排序。（实现有序性）</li><li>volatile只能保证对单次读/写的原子性。i++ 这种操作不能保证原子性。</li></ul><h4 id="并发度高的原因"><a href="#并发度高的原因" class="headerlink" title="并发度高的原因"></a>并发度高的原因</h4><p>原理上来说，COncurrentHashMap采用了分段锁技术，其中Segment继承于ReentrantLock。</p><p>不会像HashTable那样不管是put还是get操作都需要做同步操作，理论上ConcurrentHashMap支持CurrencyLevel（Segment数组数量）的线程并发。</p><p>每当一个线程占用锁访问一个Segment时，不会影响到其他的Segment。</p><p>就是说如果容量大小是16它的并发度就是16，可以同时允许16个线程操作16个Segment而且还是线程安全的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">    Segment&lt;K,V&gt; s;</span><br><span class="line">    <span class="keyword">if</span> (value == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException();<span class="comment">//这就是为啥他不可以put null值的原因</span></span><br><span class="line">    <span class="keyword">int</span> hash = hash(key);</span><br><span class="line">    <span class="keyword">int</span> j = (hash &gt;&gt;&gt; segmentShift) &amp; segmentMask;</span><br><span class="line">    <span class="keyword">if</span> ((s = (Segment&lt;K,V&gt;)UNSAFE.getObject          </span><br><span class="line">         (segments, (j &lt;&lt; SSHIFT) + SBASE)) == <span class="keyword">null</span>) </span><br><span class="line">        s = ensureSegment(j);</span><br><span class="line">    <span class="keyword">return</span> s.put(key, hash, value, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它先定位到Segment，然后再进行put操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">final</span> V <span class="title">put</span><span class="params">(K key, <span class="keyword">int</span> hash, V value, <span class="keyword">boolean</span> onlyIfAbsent)</span> </span>&#123;</span><br><span class="line">          <span class="comment">// 将当前 Segment 中的 table 通过 key 的 hashcode 定位到 HashEntry</span></span><br><span class="line">            HashEntry&lt;K,V&gt; node = tryLock() ? <span class="keyword">null</span> :</span><br><span class="line">                scanAndLockForPut(key, hash, value);</span><br><span class="line">            V oldValue;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                HashEntry&lt;K,V&gt;[] tab = table;</span><br><span class="line">                <span class="keyword">int</span> index = (tab.length - <span class="number">1</span>) &amp; hash;</span><br><span class="line">                HashEntry&lt;K,V&gt; first = entryAt(tab, index);</span><br><span class="line">                <span class="keyword">for</span> (HashEntry&lt;K,V&gt; e = first;;) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (e != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        K k;</span><br><span class="line"> <span class="comment">// 遍历该 HashEntry，如果不为空则判断传入的 key 和当前遍历的 key 是否相等，相等则覆盖旧的 value。</span></span><br><span class="line">                        <span class="keyword">if</span> ((k = e.key) == key ||</span><br><span class="line">                            (e.hash == hash &amp;&amp; key.equals(k))) &#123;</span><br><span class="line">                            oldValue = e.value;</span><br><span class="line">                            <span class="keyword">if</span> (!onlyIfAbsent) &#123;</span><br><span class="line">                                e.value = value;</span><br><span class="line">                                ++modCount;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        e = e.next;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                 <span class="comment">// 不为空则需要新建一个 HashEntry 并加入到 Segment 中，同时会先判断是否需要扩容。</span></span><br><span class="line">                        <span class="keyword">if</span> (node != <span class="keyword">null</span>)</span><br><span class="line">                            node.setNext(first);</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            node = <span class="keyword">new</span> HashEntry&lt;K,V&gt;(hash, key, value, first);</span><br><span class="line">                        <span class="keyword">int</span> c = count + <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (c &gt; threshold &amp;&amp; tab.length &lt; MAXIMUM_CAPACITY)</span><br><span class="line">                            rehash(node);</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            setEntryAt(tab, index, node);</span><br><span class="line">                        ++modCount;</span><br><span class="line">                        count = c;</span><br><span class="line">                        oldValue = <span class="keyword">null</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">               <span class="comment">//释放锁</span></span><br><span class="line">                unlock();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> oldValue;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>首先第一步的时候会尝试获取锁，如果获取失败肯定就有其他线程存在竞争，则利用<code>scanAndLockForPut（）</code>自旋获取锁。</p><ol><li>尝试自旋获取锁</li><li>如果重试的次数达到了<strong>MAX_SCAN_RETRIES</strong>则改为阻塞锁获取，保证能获取成功。</li></ol><p>get的逻辑</p><p>get逻辑比较简单，只需要将Key通过Hash之后定位到具体的Segment，在通过一次Hash定位到具体的元素上。</p><p>由于HashEntry中的value属性是volatile关键字修饰的，保证了内存可见性，所以每次获取时都是最新值。</p><p>ConcurrentHashMap的get方法时非常高效的，因为整个过程都不需要加锁</p><h4 id="1-7虽然支持每个Segment并发访问，但是存在一些问题"><a href="#1-7虽然支持每个Segment并发访问，但是存在一些问题" class="headerlink" title="1.7虽然支持每个Segment并发访问，但是存在一些问题"></a>1.7虽然支持每个Segment并发访问，但是存在一些问题</h4><p>因为基本上还是数组加链表的方式，我们去查询的时候，还得遍历链表，会导致效率很低，这个跟JDK1.7的HashMap是存在的一样问题，所以他在JDK1.8完全优化了。</p><h3 id="JDK1-8它的数据结构"><a href="#JDK1-8它的数据结构" class="headerlink" title="JDK1.8它的数据结构"></a>JDK1.8它的数据结构</h3><p>其中抛弃了原有的Segment分段锁，而采用了<strong>CAS+synchronized</strong>来保证并发安全性</p><p>跟HashMap很想，也把之前的HashEntry改成了Node，但是作用不变，把值和next采用了volatile去修饰，保证了可见性，并且也引入了红黑树，在链表大于一定值的时候会转换（默认是8）。</p><h3 id="值存取操作，以及怎么保证线程安全的"><a href="#值存取操作，以及怎么保证线程安全的" class="headerlink" title="值存取操作，以及怎么保证线程安全的"></a>值存取操作，以及怎么保证线程安全的</h3><p>ConcurrentHashMap在进行put操作的的时候还是比较复杂的，大致可以分为以下步骤：</p><ol><li>根据key计算出hashCode。</li><li>判断是否需要进行初始化。</li><li>即为当前key定位出Node，如果为空表示当前位置可以写入数据，利用CAS尝试写入，失败则自旋保证成功。</li><li>如果当前位置的<strong>hashCode == MOVED ==  -1</strong>，则需要进行扩容。</li><li>如果都不满足，则利用synchronized锁写入数据</li><li>如果数量大于<strong>TREEIFY_THRESHOLD</strong> 则要转换为红黑树。</li></ol><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/map2020_3_21_2.jpg" alt=""></p><h4 id="CAS是什么？自旋又是什么？"><a href="#CAS是什么？自旋又是什么？" class="headerlink" title="CAS是什么？自旋又是什么？"></a>CAS是什么？自旋又是什么？</h4><p>CAS是乐观锁的一种实现方式，是一种轻量级锁，JUC中很多工具类的实现就是基于CAS的。</p><p>CAS操作的流程如下图所示，线程在读取数据时不进行加锁，在准备写回数据时，比较原值是否修改，若未被其他线程修改则写回，若已被修改，则重新执行读取流程。</p><p>这是一种乐观策略，认为并发操作并不总会发生。</p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/map2020_3_21_3.jpg" alt=""></p><p>就比如我现在要修改数据库的一条数据，修改之前我先拿到他原来的值，然后再SQL里面还会价格判断，原来的值和我手上拿到的他原来的值是否一样，一样我们就可以去修改了，不一样就证明被别的线程修改了你就return错误就好了。</p><p>SQL伪代码大概如下；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> a <span class="keyword">set</span> <span class="keyword">value</span> = newValue <span class="keyword">where</span> <span class="keyword">value</span> = <span class="comment">#&#123;oldValue&#125;//oldValue就是我们执行前查询出来的值</span></span><br></pre></td></tr></table></figure><h4 id="CAS就一定能保证数据没被别的线程修改过吗？什么是ABA？"><a href="#CAS就一定能保证数据没被别的线程修改过吗？什么是ABA？" class="headerlink" title="CAS就一定能保证数据没被别的线程修改过吗？什么是ABA？"></a>CAS就一定能保证数据没被别的线程修改过吗？什么是ABA？</h4><p>ABA问题，CAS就无法判断了。</p><p>就是说来了一个线程把值改回了B，又来了一个线程把值又改回了A，对于这个时候判断的线程，就发现它的值还是A，所以他就不知道这个值到底有没有被人改过，其实很多场景如果只追求最后结果正确，这个是没关系的。</p><p>但是实际过程中还是需要记录修改过程的，比如资金修改什么的，你每次修改的都应该有记录，方便追溯。</p><h4 id="怎么解决ABA问题？"><a href="#怎么解决ABA问题？" class="headerlink" title="怎么解决ABA问题？"></a>怎么解决ABA问题？</h4><p>用版本号去保证就好了，比如说，我在修改前去查询他原来的值得时候就带一个版本号，每次判断就连值和版本号一起判断，判断成功就给版本号加1.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> a <span class="keyword">set</span> <span class="keyword">value</span> = newValue ，vision = vision + <span class="number">1</span> <span class="keyword">where</span> <span class="keyword">value</span> = <span class="comment">#&#123;oldValue&#125; and vision = #&#123;vision&#125; // 判断原来的值和版本号是否匹配，中间有别的线程修改，值可能相等，但是版本号100%不一样</span></span><br></pre></td></tr></table></figure><h4 id="除了版本号还有别的方法保证吗？"><a href="#除了版本号还有别的方法保证吗？" class="headerlink" title="除了版本号还有别的方法保证吗？"></a>除了版本号还有别的方法保证吗？</h4><p>有很多方式，比如时间戳也可以，查询的时候把时间戳一起查出来，对的上才修改并且更新值的时候一起修改更新事件，这样也能保证，方法很多但是跟版本号都是异曲同工</p><h3 id="CAS性能很高，但是synchronized性能不咋地，为什么1-8之后反而多了synchronized？"><a href="#CAS性能很高，但是synchronized性能不咋地，为什么1-8之后反而多了synchronized？" class="headerlink" title="CAS性能很高，但是synchronized性能不咋地，为什么1.8之后反而多了synchronized？"></a>CAS性能很高，但是synchronized性能不咋地，为什么1.8之后反而多了synchronized？</h3><p>synchronized之前一直都是重量级的锁，但是java官方对他进行过升级，他现在采用的是锁升级的方式去做的。</p><p>针对synchronized获取锁的方式，JVM使用了锁升级的优化方式，就是先使用偏向锁优先同一线程然后再次获取锁，如果失败，就升级为CAS轻量级锁，如果失败就会短暂自旋，反之线程被系统挂起，最后如果都失败就升级为重量级锁。</p><h3 id="ConcurrentHashMap的get操作是什么样子的？"><a href="#ConcurrentHashMap的get操作是什么样子的？" class="headerlink" title="ConcurrentHashMap的get操作是什么样子的？"></a>ConcurrentHashMap的get操作是什么样子的？</h3><ul><li>根据计算出来的hashCode寻址，如果就在桶上那么直接返回值</li><li>如果是红黑树那就按照树的方式获取值</li><li>都不满足那就按照链表的方式遍历获取值</li></ul><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/map2020_3_21_4.jpg" alt=""></p><h3 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h3><p>1.8在1.7的数据结构上做了大的改动，采用红黑树之后可以保证查询效率(O(logn)),甚至取消了ReentrantLock改为了synchronized，这样可以看出新版的JDK中对synchronized优化是很到位的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HashMap的线程安全问题，怎么处理&quot;&gt;&lt;a href=&quot;#HashMap的线程安全问题，怎么处理&quot; class=&quot;headerlink&quot; title=&quot;HashMap的线程安全问题，怎么处理&quot;&gt;&lt;/a&gt;HashMap的线程安全问题，怎么处理&lt;/h2&gt;&lt;p&gt;一般
      
    
    </summary>
    
    
      <category term="Java基础" scheme="http://yoursite.com/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>HashMap底层原理</title>
    <link href="http://yoursite.com/2020/03/16/HashMap%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2020/03/16/HashMap%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/</id>
    <published>2020-03-16T03:52:38.000Z</published>
    <updated>2020-03-20T13:10:07.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HashMap底层机构"><a href="#HashMap底层机构" class="headerlink" title="HashMap底层机构"></a>HashMap底层机构</h2><p>HashMap是非常常用的数据结构,有数组和链表组合构成的数据结构</p><h3 id="数组的使用"><a href="#数组的使用" class="headerlink" title="数组的使用"></a>数组的使用</h3><p>数组里每个地方都存了Key-Value这样的实例,  在Java7叫Entry在Java8中叫Node。</p><p><img src="https://camo.githubusercontent.com/371582d1941290e70c693f968be1ca56fd1e1138/68747470733a2f2f747661312e73696e61696d672e636e2f6c617267652f303036744e6252776c7931673970636868627270336a3330657a30326e676c692e6a7067" alt=""></p><p>因为他本身所有的位置都为null，在put插入的时候会根据key的hash去计算一个index值。</p><p>数组的长度是有限的，在有限的长度里面我们使用哈希，哈希本身就存在概率性，会出现哈希冲突，当出现哈希冲突之后，就形成了链表。</p><h3 id="链表的使用"><a href="#链表的使用" class="headerlink" title="链表的使用"></a>链表的使用</h3><p>每一个节点都会保存自身的hash、key、value、以及下一个节点，</p><p><img src="https://camo.githubusercontent.com/423b114bbac04928ea0414f2c677a93934daa4c9/68747470733a2f2f747661312e73696e61696d672e636e2f6c617267652f303036744e6252776c7931673970637a36376b656d6a333066763039373735392e6a7067" alt=""></p><p><strong>在插入链表是，是怎么插入的</strong></p><p>java8之前是头插法，新来的值会取代原有的值，原有的值就顺推都链表中去，</p><p>但是，在Java8之后，都是采用尾插法</p><h4 id="为什么改为尾插法"><a href="#为什么改为尾插法" class="headerlink" title="为什么改为尾插法"></a><strong>为什么改为尾插法</strong></h4><p>首先看下HashMap的扩容机制：</p><p>数组容量是有限的，数据多次插入，到达一定的数量就会进行扩容，就是resize</p><p>resize有两个因素：</p><ul><li>Capacity：HashMap当前长度</li><li>LoadFactor：负载因子，默认值0.75f。</li></ul><p><img src="https://camo.githubusercontent.com/91d3dc2dd4fd42fda5194ac771bbba30e73aa857/68747470733a2f2f747661312e73696e61696d672e636e2f6c617267652f303036744e6252776c79316739706477333972776a6a333078693035367766332e6a7067" alt=""></p><p>就比如当前的容量大小为100，当你存进第76个的时候，判断发现就进行resize了，但是HashMap的扩容不是简单的扩容那么简单</p><p><strong>怎么扩容</strong></p><p>分为两步：</p><ul><li>扩容：创建一个新的Entry空数组，长度是原数组的2呗。</li><li>ReHash：遍历原Entry数组，把所有的Entry重新Hash到新数组。</li></ul><p><strong>为什么创建新Hash</strong></p><p>因为长度扩大之后，Hash的规则也随之改变。</p><p>Hash的公式 —&gt; index = HashCode (key) &amp; (length - 1)</p><p>原来长度（length）是8位运算出来的值是2，新的长度是16运算出来的值就不一样了。</p><p>我们现在网一个容量大小为2的put两个值，负载因子是0.75，我们在put第二个的时候就会进行resize。</p><p>还没resize之前可能是这样的。</p><p><strong>Top：A的下一个指针是指向B的</strong></p><p><img src="https://camo.githubusercontent.com/719e2b7309ad1da77a76ee4f0d8b4213c032038c/68747470733a2f2f747661312e73696e61696d672e636e2f6c617267652f303036744e6252776c79316739706b6178676735696a3330353030376f6466722e6a7067" alt=""></p><p>因为resize的赋值方式，也就是使用了单链表的头插入方式，同一个位置上新元素总被放在链表的头部位置，在旧数组中同一条Entry链上的元素，通过重新计算索引位置后，有可能被放到了新数组的不同位置上。</p><p>就有可能出现——B的下一个指针指向了A</p><p><img src="https://user-gold-cdn.xitu.io/2019/12/9/16eeb62dbd336275?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt=""></p><p>一旦几个线程都调整完成，就可能出现环形链表</p><p><img src="https://user-gold-cdn.xitu.io/2019/12/9/16eeb62dbed60219?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt=""></p><p><strong>JDK1.8尾插</strong></p><p>因为JDK1.8之后链表有了红黑树部分，代码已经多了很多if else的逻辑判断，红黑树的引用将原本O(n)的时间复杂度降低到了O(logn).</p><p>使用头插法会改变链表上的顺序，但是如果使用尾插，在扩容时会保持链表元素原本的顺序，就不会出现环形链表的问题了。</p><p>就是说原本A-&gt;B，在扩容后那个链表还是A-&gt;B</p><p><img src="https://user-gold-cdn.xitu.io/2019/12/9/16eeb62dc0d3623a?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt=""></p><h3 id="默认长度为什么是16"><a href="#默认长度为什么是16" class="headerlink" title="默认长度为什么是16"></a>默认长度为什么是16</h3><p><img src="https://user-gold-cdn.xitu.io/2019/12/9/16eeb62dd6be103d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt=""></p><p>选择16是为了服务将Key映射到index的算法。所有的key我们都会拿到他的hash，但是我们怎么尽可能的得到一个均匀分布的hash呢</p><h4 id="为什么重写equals方法的时候需要重写hashCode方法？"><a href="#为什么重写equals方法的时候需要重写hashCode方法？" class="headerlink" title="为什么重写equals方法的时候需要重写hashCode方法？"></a>为什么重写equals方法的时候需要重写hashCode方法？</h4><p>因为在java中，所有的对象都是继承于Object类，Object类中有两个方法equals、hashCode，这两个方法都是用来比较对象是否相等的。</p><p>在未重写equals方法我们是继承了object的equals方法，那里的equals是比较两个对象的内存地址，显然我们new了2个对象内存地址肯定不一样。</p><ul><li>对于值对象，==比较的是两个对象的值</li><li>对于引用对象，比较的是两个对象的地址</li></ul><p>在发生hash冲突的时候，我们通过重写equals方法，来保证相同对象返回相同的hash值，不同的对象返回不同的hash值</p><h3 id="怎样处理HashMap的线程安全问题"><a href="#怎样处理HashMap的线程安全问题" class="headerlink" title="怎样处理HashMap的线程安全问题"></a>怎样处理HashMap的线程安全问题</h3><p>一般都是使用HashTable或者ConcurrentHashMap，但是因为前者的并发度的原因，所以一般都是使用ConcurrentHashMap。</p><p>HashTable很简单粗暴，直接在方法上锁，并发度很低，最多同时运行一个线程访问，ConcurrentHashMap会好很多。</p><p><img src="https://user-gold-cdn.xitu.io/2019/12/9/16eeb62de99c4316?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HashMap底层机构&quot;&gt;&lt;a href=&quot;#HashMap底层机构&quot; class=&quot;headerlink&quot; title=&quot;HashMap底层机构&quot;&gt;&lt;/a&gt;HashMap底层机构&lt;/h2&gt;&lt;p&gt;HashMap是非常常用的数据结构,有数组和链表组合构成的数据结构&lt;
      
    
    </summary>
    
    
      <category term="Java基础" scheme="http://yoursite.com/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="HashMap" scheme="http://yoursite.com/tags/HashMap/"/>
    
  </entry>
  
  <entry>
    <title>日常开发常用git命令</title>
    <link href="http://yoursite.com/2020/03/16/%E6%97%A5%E5%B8%B8%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8git%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2020/03/16/%E6%97%A5%E5%B8%B8%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8git%E5%91%BD%E4%BB%A4/</id>
    <published>2020-03-15T21:15:44.000Z</published>
    <updated>2020-03-15T22:09:24.715Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-配置账户、SSh"><a href="#一-配置账户、SSh" class="headerlink" title="一 配置账户、SSh"></a>一 配置账户、SSh</h2><ul><li><p>1.1 配置全局账户信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;Your Name&quot;</span><br><span class="line">git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>1.2 生成SSH key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your email&quot;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看公钥</span><br><span class="line">cat .ssh&#x2F;id_rsa.pub </span><br><span class="line">或</span><br><span class="line">open .ssh&#x2F;id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>1.3 连接远程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></li></ul><h2 id="二-设置忽略-gitignore文件"><a href="#二-设置忽略-gitignore文件" class="headerlink" title="二    设置忽略.gitignore文件"></a>二    设置忽略.gitignore文件</h2><ul><li><p><strong>2.1 GitHub开源忽略文件地址</strong><br><a href="https://github.com/github/gitignore" target="_blank" rel="noopener">gitignore</a></p></li><li><p>2.2 Xcode常用忽略文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"># Xcode</span><br><span class="line">#</span><br><span class="line"># gitignore contributors: remember to update Global&#x2F;Xcode.gitignore, Objective-C.gitignore &amp; Swift.gitignore</span><br><span class="line"></span><br><span class="line">## Build generated</span><br><span class="line">build&#x2F;</span><br><span class="line">DerivedData&#x2F;</span><br><span class="line"></span><br><span class="line">## Various settings</span><br><span class="line">*.pbxuser</span><br><span class="line">!default.pbxuser</span><br><span class="line">*.mode1v3</span><br><span class="line">!default.mode1v3</span><br><span class="line">*.mode2v3</span><br><span class="line">!default.mode2v3</span><br><span class="line">*.perspectivev3</span><br><span class="line">!default.perspectivev3</span><br><span class="line">xcuserdata&#x2F;</span><br><span class="line"></span><br><span class="line">## Other</span><br><span class="line">*.moved-aside</span><br><span class="line">*.xccheckout</span><br><span class="line">*.xcscmblueprint</span><br><span class="line">.DS_Store</span><br><span class="line">*.xcuserstate</span><br><span class="line">*.lock</span><br><span class="line"></span><br><span class="line">## Obj-C&#x2F;Swift specific</span><br><span class="line">*.hmap</span><br><span class="line">*.ipa</span><br><span class="line">*.dSYM.zip</span><br><span class="line">*.dSYM</span><br><span class="line"></span><br><span class="line"># CocoaPods</span><br><span class="line">#</span><br><span class="line"># We recommend against adding the Pods directory to your .gitignore. However</span><br><span class="line"># you should judge for yourself, the pros and cons are mentioned at:</span><br><span class="line"># https:&#x2F;&#x2F;guides.cocoapods.org&#x2F;using&#x2F;using-cocoapods.html#should-i-check-the-pods-directory-into-source-control</span><br><span class="line">#</span><br><span class="line"># Pods&#x2F;</span><br><span class="line"></span><br><span class="line"># Carthage</span><br><span class="line">#</span><br><span class="line"># Add this line if you want to avoid checking in source code from Carthage dependencies.</span><br><span class="line"># Carthage&#x2F;Checkouts</span><br><span class="line"></span><br><span class="line">Carthage&#x2F;Build</span><br><span class="line"></span><br><span class="line"># fastlane</span><br><span class="line">#</span><br><span class="line"># It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the</span><br><span class="line"># screenshots whenever they are needed.</span><br><span class="line"># For more information about the recommended setup visit:</span><br><span class="line"># https:&#x2F;&#x2F;docs.fastlane.tools&#x2F;best-practices&#x2F;source-control&#x2F;#source-control</span><br><span class="line"></span><br><span class="line">fastlane&#x2F;report.xml</span><br><span class="line">fastlane&#x2F;Preview.html</span><br><span class="line">fastlane&#x2F;screenshots</span><br><span class="line">fastlane&#x2F;test_output</span><br><span class="line"></span><br><span class="line"># Code Injection</span><br><span class="line">#</span><br><span class="line"># After new code Injection tools there&#39;s a generated folder &#x2F;iOSInjectionProject</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;johnno1962&#x2F;injectionforxcode</span><br><span class="line"></span><br><span class="line">iOSInjectionProject&#x2F;</span><br></pre></td></tr></table></figure></li></ul><h2 id="三-Git基本操作-常用"><a href="#三-Git基本操作-常用" class="headerlink" title="三    Git基本操作(常用)"></a>三    Git基本操作(常用)</h2><ul><li><p>3.1 创建版本库，命令或图形化创建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;创建文件夹</span><br><span class="line">mkdir learngit</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;切换到learngit</span><br><span class="line">cd learngit</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 查看路径</span><br><span class="line">pwd</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;通过git init命令把这个目录编程git可以管理的仓库</span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看.git文件，因为这个文件是隐藏的</span><br><span class="line">ls -ah</span><br></pre></td></tr></table></figure></li><li><p>3.2 添加文件到暂存区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 添加所有文件</span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 添加单个</span><br><span class="line">git add [file]</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 添加多个</span><br><span class="line">git add [file1] [file2]</span><br></pre></td></tr></table></figure></li><li><p>3.3 提交文件到本地仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 带备注信息</span><br><span class="line">git commit -m &quot;your note&quot;</span><br></pre></td></tr></table></figure></li><li><p>3.4 克隆远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clon [远程仓库地址]</span><br></pre></td></tr></table></figure></li><li><p>3.5 查看提交日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;查看提交详情</span><br><span class="line">git log</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;忽略输出相关信息</span><br><span class="line">git log --pretty&#x3D;oneline</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 省略部分commit id</span><br><span class="line">git log --pretty&#x3D;oneline --abbrev-commit</span><br></pre></td></tr></table></figure></li><li><p>3.6 本地仓库关联远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin [远程仓库地址]</span><br></pre></td></tr></table></figure></li><li><p>3.7 本地库推送到远程仓库</p></li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送到远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后推送或者拉取时就可以简化代码</span><br><span class="line">git push -u origin master</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 简化命令</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><ul><li><p>3.8 查看远程仓库信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;查看远程库的信息</span><br><span class="line">git remote</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看更详细的信息</span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure></li><li><p>3.9 获取并合并其他的厂库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br><span class="line">&#x2F;&#x2F;将origin厂库的master分支拉取并合并到本地的my_test分支上</span><br><span class="line">git push &lt;远程主机&gt; &lt;远程分支&gt;:&lt;本地分支&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="四-版本回退"><a href="#四-版本回退" class="headerlink" title="四  版本回退"></a>四  版本回退</h2><ul><li><p>4.1 版本回退</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 回退到上一个版本, 并且修改</span><br><span class="line">git reset --hard HEAD^</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调到指定版本, 之前或未来</span><br><span class="line">git reset --hard [commit id(前7位)]</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 撤销提交, 不会撤销代码修改</span><br><span class="line">git reset --soft [commit id]</span><br></pre></td></tr></table></figure></li><li><p>4.2 查看历史命令列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br></pre></td></tr></table></figure></li><li><p>4.3 查看状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure></li><li><p>4.4 查看工作区和版本库里面最新版本的区别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD -- [file]</span><br></pre></td></tr></table></figure></li><li><p>4.5 丢弃工作区的修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;把文件在工作区的修改全部撤销</span><br><span class="line">&#x2F;&#x2F;一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态</span><br><span class="line">&#x2F;&#x2F;一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。</span><br><span class="line">git checkout -- [file]</span><br></pre></td></tr></table></figure></li><li><p>4.6 丢弃暂存区修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;用命令git reset HEAD file可以把暂存区的修改撤销掉(unstage), 重新放回工作区</span><br><span class="line">&#x2F;&#x2F;git reset命令既可以回退版本,也可以把暂存区的修改回退到工作区</span><br><span class="line">git reset HEAD [file]</span><br></pre></td></tr></table></figure></li><li><p>4.7 删除文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;文件管理器中把没有用的文件删了</span><br><span class="line">rm [file]</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;从版本库中删除该文件</span><br><span class="line">git rm [file]</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;一种情况是删错了, 因为版本库里还有呢,所以可以很轻松地把误删的文件恢复到最新版本</span><br><span class="line">git checkout -- [file]</span><br></pre></td></tr></table></figure></li></ul><h2 id="五-Git分支操作"><a href="#五-Git分支操作" class="headerlink" title="五 Git分支操作"></a>五 Git分支操作</h2><ul><li><p>5.1 创建分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 创建dev分支, 然后切换到dev分支</span><br><span class="line">git checkout -b [分支名]</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; git checkout命令加上-b参数表示创建并切换, 箱单与以下两条命令</span><br><span class="line">git branch [分支名]</span><br><span class="line">git checkout [分支名]</span><br></pre></td></tr></table></figure></li><li><p>5.2 切换分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout [分支名]</span><br></pre></td></tr></table></figure></li><li><p>5.3 查看分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 查看本地分支</span><br><span class="line">git branck</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 查看远程分支, 远程分支是红色</span><br><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;或查看最新提交信息</span><br><span class="line">git branch -v</span><br></pre></td></tr></table></figure></li><li><p>5.4 合并分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;把dev分支的工作成果合并到master分支上</span><br><span class="line">git merge [name]</span><br></pre></td></tr></table></figure></li><li><p>5.5 删除分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;删除本地分支</span><br><span class="line">git branch -d [name]</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;删除远程分支</span><br><span class="line">git push origin :[branch name]</span><br><span class="line">git branch -r -d origin&#x2F;[branch name]</span><br></pre></td></tr></table></figure></li><li><p>5.6 查看分支合并图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git log --greph</span><br><span class="line"></span><br><span class="line">git log --graph --pretty&#x3D;oneline --abbrev-commit</span><br></pre></td></tr></table></figure></li><li><p>5.7 分支管理策略</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;分支管理策略</span><br><span class="line">阅读:473797</span><br><span class="line">通常，合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。</span><br><span class="line">如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。</span><br><span class="line">git merge --no-ff -m &quot;your note&quot; [branch name]</span><br></pre></td></tr></table></figure></li><li><p>5.8 强行删除未合并分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -D &lt;name&gt;</span><br></pre></td></tr></table></figure></li><li><p>5.9 推送分支到远程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin [branch name]</span><br></pre></td></tr></table></figure></li></ul><h2 id="六-Git打标签"><a href="#六-Git打标签" class="headerlink" title="六  Git打标签"></a>六  Git打标签</h2><p>参考这篇文章:  <a href="https://www.jianshu.com/p/3e85e15c5e43" target="_blank" rel="noopener">MAC上Git打标签</a></p><p>将暂存区和工作区的改动保存起来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line"># 添加备注</span><br><span class="line">git stash save &#39;some message&#39;</span><br></pre></td></tr></table></figure><h2 id="七-git-stash"><a href="#七-git-stash" class="headerlink" title="七  git stash"></a>七  git stash</h2><ul><li><p>显示保存进度的列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash list</span><br></pre></td></tr></table></figure></li><li><p><strong>git stash pop [–index] [stash_id]</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 恢复最新的进度到工作区。git默认会把工作区和暂存区的改动都恢复到工作区。</span><br><span class="line">git stash pop</span><br><span class="line"></span><br><span class="line"># 恢复最新的进度到工作区和暂存区。（尝试将原来暂存区的改动还恢复到暂存区）</span><br><span class="line">git stash pop --index</span><br><span class="line"></span><br><span class="line"># 恢复指定的进度到工作区。stash_id是通过git stash list命令得到的，通过git stash pop命令恢复进度后，会删除当前进度</span><br><span class="line">git stash pop stash@&#123;1&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>git stash apply [–index] [stash_id]</strong>（除了不删除恢复的进度之外，其余和git stash pop 命令一样。）</p></li><li><p><strong>git stash drop [stash_id]</strong>（删除一个存储的进度。如果不指定stash_id，则默认删除最新的存储进度。）</p></li><li><p><strong>git stash clear</strong>（删除所有存储的进度。）</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一-配置账户、SSh&quot;&gt;&lt;a href=&quot;#一-配置账户、SSh&quot; class=&quot;headerlink&quot; title=&quot;一 配置账户、SSh&quot;&gt;&lt;/a&gt;一 配置账户、SSh&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.1 配置全局账户信息&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
    
      <category term="Git常用命令" scheme="http://yoursite.com/tags/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Redis缓存击穿_雪崩_并发问题分析</title>
    <link href="http://yoursite.com/2020/03/16/Redis%E7%BC%93%E5%AD%98%E5%87%BB%E7%A9%BF_%E9%9B%AA%E5%B4%A9_%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2020/03/16/Redis%E7%BC%93%E5%AD%98%E5%87%BB%E7%A9%BF_%E9%9B%AA%E5%B4%A9_%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/</id>
    <published>2020-03-15T19:24:21.000Z</published>
    <updated>2020-03-15T19:25:30.942Z</updated>
    
    <content type="html"><![CDATA[<p>文章转载：<a href="https://juejin.im/post/5c9a67ac6fb9a070cb24bf34" target="_blank" rel="noopener">石衫的架构笔记</a></p><h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h3><p>在我们的平常的项目中多多少少都会使用到缓存，因为一些数据我们没有必要每次查询的时候都去查询到数据库。</p><p>特别是高 QPS 的系统，每次都去查询数据库，对于你的数据库来说将是灾难。</p><p>今天我们不牵涉多级缓存的知识，就把系统使用到的缓存方案，不管是一级还是多级的都统称为缓存，主要是为了讲述使用缓存的时候可能会遇到的一些问题以及一些解决办法。</p><p>我们使用缓存时，我们的业务系统大概的调用流程如下图：</p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/redis_1_1_1_1.jpg" alt="img"></p><p>当我们查询一条数据时，先去查询缓存，如果缓存有就直接返回，如果没有就去查询数据库，然后返回。这种情况下就可能会出现一些现象。</p><h3 id="2-缓存穿透"><a href="#2-缓存穿透" class="headerlink" title="2 缓存穿透"></a>2 缓存穿透</h3><p>2.1 什么是缓存穿透</p><p>正常情况下，我们去查询数据都是存在。</p><p>那么请求去查询一条压根儿数据库中根本就不存在的数据，也就是缓存和数据库都查询不到这条数据，但是请求每次都会打到数据库上面去。</p><p>这种查询不存在数据的现象我们称为<strong>缓存穿透</strong>。</p><p>2.2 穿透带来的问题</p><p>试想一下，如果有黑客会对你的系统进行攻击，拿一个不存在的id 去查询数据，会产生大量的请求到数据库去查询。可能会导致你的数据库由于压力过大而宕掉。</p><p>2.3 解决办法</p><p>2.3.1 缓存空值</p><p>之所以会发生穿透，就是因为缓存中没有存储这些空数据的key。从而导致每次查询都到数据库去了。</p><p>那么我们就可以为这些key对应的值设置为null 丢到缓存里面去。后面再出现查询这个key 的请求的时候，直接返回null 。</p><p>这样，就不用在到数据库中去走一圈了，但是别忘了设置过期时间。</p><p>2.3.2 BloomFilter</p><p>BloomFilter 类似于一个hbase set 用来判断某个元素（key）是否存在于某个集合中。</p><p>这种方式在大数据场景应用比较多，比如 Hbase 中使用它去判断数据是否在磁盘上。还有在爬虫场景判断url 是否已经被爬取过。</p><p>这种方案可以加在第一种方案中，在缓存之前在加一层 BloomFilter ，在查询的时候先去 BloomFilter 去查询 key 是否存在，如果不存在就直接返回，存在再走查缓存 -&gt; 查 DB。</p><p>流程图如下：</p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/redis_1_1_1_2.jpg" alt="img"></p><p>2.4 如何选择</p><p>针对于一些恶意攻击，攻击带过来的大量key 是不存在的，那么我们采用第一种方案就会缓存大量不存在key的数据。</p><p>此时我们采用第一种方案就不合适了，我们完全可以先对使用第二种方案进行过滤掉这些key。</p><p>针对这种key异常多、请求重复率比较低的数据，我们就没有必要进行缓存，使用第二种方案直接过滤掉。</p><p>而对于空数据的key有限的，重复率比较高的，我们则可以采用第一种方式进行缓存。</p><h3 id="3-缓存击穿"><a href="#3-缓存击穿" class="headerlink" title="3 缓存击穿"></a>3 缓存击穿</h3><p>3.1 什么是击穿</p><p>缓存击穿是我们可能遇到的第二个使用缓存方案可能遇到的问题。</p><p>在平常高并发的系统中，大量的请求同时查询一个 key 时，此时这个key正好失效了，就会导致大量的请求都打到数据库上面去。这种现象我们称为<strong>缓存击穿</strong>。</p><p>3.2 会带来什么问题</p><p>会造成某一时刻数据库请求量过大，压力剧增。</p><p>3.3 如何解决</p><p>上面的现象是多个线程同时去查询数据库的这条数据，那么我们可以在第一个查询数据的请求上使用一个 互斥锁来锁住它。</p><p>其他的线程走到这一步拿不到锁就等着，等第一个线程查询到了数据，然后做缓存。后面的线程进来发现已经有缓存了，就直接走缓存。</p><h3 id="4、缓存雪崩"><a href="#4、缓存雪崩" class="headerlink" title="4、缓存雪崩"></a>4、缓存雪崩</h3><p>4.1 什么是缓存雪崩</p><p>缓存雪崩的情况是说，当某一时刻发生大规模的缓存失效的情况，比如你的缓存服务宕机了，会有大量的请求进来直接打到DB上面。结果就是DB 称不住，挂掉。</p><p>4.2 解决办法</p><p>4.2.1 事前：</p><ul><li><strong>使用集群缓存，保证缓存服务的高可用</strong></li></ul><p>这种方案就是在发生雪崩前对缓存集群实现高可用，如果是使用 Redis，可以使用 主从+哨兵 ，Redis Cluster 来避免 Redis 全盘崩溃的情况。</p><p>4.2.2 事中：</p><ul><li><strong>ehcache本地缓存 + Hystrix限流&amp;降级,避免MySQL被打死</strong></li></ul><p>使用 ehcache 本地缓存的目的也是考虑在 Redis Cluster 完全不可用的时候，ehcache 本地缓存还能够支撑一阵。</p><p>使用 Hystrix进行限流 &amp; 降级 ，比如一秒来了5000个请求，我们可以设置假设只能有一秒 2000个请求能通过这个组件，那么其他剩余的 3000 请求就会走限流逻辑。</p><p>然后去调用我们自己开发的降级组件（降级），比如设置的一些默认值呀之类的。以此来保护最后的 MySQL 不会被大量的请求给打死。</p><p>4.2.3 事后：</p><ul><li><strong>开启Redis持久化机制，尽快恢复缓存集群</strong></li></ul><p>一旦重启，就能从磁盘上自动加载数据恢复内存中的数据。</p><p>防止雪崩方案如下图所示：</p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/redis_1_1_1_1.jpg" alt="img"></p><h3 id="5-解决热点数据集中失效问题"><a href="#5-解决热点数据集中失效问题" class="headerlink" title="5 解决热点数据集中失效问题"></a>5 解决热点数据集中失效问题</h3><p>我们在设置缓存的时候，一般会给缓存设置一个失效时间，过了这个时间，缓存就失效了。</p><p>对于一些热点的数据来说，当缓存失效以后会存在大量的请求过来，然后打到数据库去，从而可能导致数据库崩溃的情况。</p><p>5.1 解决办法</p><p>5.1.1 设置不同的失效时间</p><p>为了避免这些热点的数据集中失效，那么我们在设置缓存过期时间的时候，我们让他们失效的时间错开。</p><p>比如在一个基础的时间上加上或者减去一个范围内的随机值。</p><p>5.1.2 互斥锁</p><p>结合上面的击穿的情况，在第一个请求去查询数据库的时候对他加一个互斥锁，其余的查询请求都会被阻塞住，直到锁被释放，从而保护数据库。</p><p>但是也是由于它会阻塞其他的线程，此时系统吞吐量会下降。需要结合实际的业务去考虑是否要这么做。</p><p><strong>参考资料：</strong></p><p>缓存世界中的三大问题及解决方案 </p><p>中华石杉老师的Java突击面试资料</p><p>查看更多Redis：<a href="http://insomnia.ltd/categories/Redis/" target="_blank" rel="noopener">Redis</a></p><p>作者：石杉的架构笔记<br>链接：<a href="https://juejin.im/post/5c9a67ac6fb9a070cb24bf34" target="_blank" rel="noopener">https://juejin.im/post/5c9a67ac6fb9a070cb24bf34</a><br>来源：掘金</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;文章转载：&lt;a href=&quot;https://juejin.im/post/5c9a67ac6fb9a070cb24bf34&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;石衫的架构笔记&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前
      
    
    </summary>
    
    
      <category term="Redis" scheme="http://yoursite.com/categories/Redis/"/>
    
    
      <category term="Redis 击穿 雪崩 并发问题" scheme="http://yoursite.com/tags/Redis-%E5%87%BB%E7%A9%BF-%E9%9B%AA%E5%B4%A9-%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot入门</title>
    <link href="http://yoursite.com/2020/03/16/Spring%20Boot%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2020/03/16/Spring%20Boot%E5%85%A5%E9%97%A8/</id>
    <published>2020-03-15T18:36:41.000Z</published>
    <updated>2020-03-15T19:15:36.192Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是-Spring-Boot"><a href="#什么是-Spring-Boot" class="headerlink" title="什么是 Spring Boot"></a>什么是 Spring Boot</h2><p>Spring Boot 其设计目的是用来简化新 Spring 应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。用我的话来解释，即使Spring Boot其实不是什么新的框架，他只是整合了很多很多很多的框架，为它们提供了默认的配置。</p><h2 id="使用Spring-Boot的好处"><a href="#使用Spring-Boot的好处" class="headerlink" title="使用Spring Boot的好处"></a>使用Spring Boot的好处</h2><p>简单、高效、便捷！平时搭建一个Spring Web项目需要怎么做呢？</p><ul><li>配置web.xml，加载Spring 和 Spring MVC</li><li>配置数据库连接、配置Spring事务</li><li>配置加载配置文件的读取，开启注解</li><li>配置日志文件</li><li>…</li><li>配置完成后部署Tomcat调试</li><li>…</li></ul><p>现在非常流行微服务，如果我这个项目仅仅只是需要发送一个验证码，如果我的项目仅仅是生产一个积分；这些繁琐的配置我都要折腾一遍! 比业务代码还要繁琐！</p><p><img src="https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRUNXiQLajUWs5h03csNwrPbdHSlp3SaqT1RDR2BFGK7SWLpe1N" alt=""></p><p>使用Spring Boot 我们只需要很少的几个配置就可以迅速的搭建起来一套Web项目或者一个微服务！</p><p><img src="https://image.dbbqb.com/3vJGA" alt=""></p><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><p><strong>Maven构建项目</strong></p><ol><li>访问<a href="http://start.spring.io/" target="_blank" rel="noopener">http://start.spring.io/</a></li><li>选择构建工具 Maven Project、Java、Spring Boot 版本 2.1.3 以及一些工厂基本信息，参考下图所示：<img src="http://favorites.ren/assets/images/2019/springboot/spring-boot-start.png" alt=""></li><li>点击 Generate Project 下载项目压缩包</li><li>解压后，使用 Idea 导入项目，File -&gt; New -&gt; Model from Existing Source.. -&gt; 选择解压后的文件夹 -&gt; OK，选择 Maven 一路 Next，OK done!</li></ol><p><strong>Idea 构建项目</strong></p><ul><li>1、选择 File -&gt; New —&gt; Project… 弹出新建项目的框</li><li>2、选择 Spring Initializr，Next 也会出现上述类似的配置界面，Idea 帮我们做了集成</li><li>3、填写相关内容后，点击 Next 选择依赖的包再点击 Next，最后确定信息无误点击 Finish。</li></ul><p><strong>项目结构介绍</strong></p><p>如下图所示，Spring Boot 的基础结构共三个部分:</p><ul><li><code>src/main/java</code> 程序开发以及主程序入口</li><li><code>src/main/resources</code> 配置文件</li><li><code>src/test/java</code> 测试程序</li></ul><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/springboot1-1-1.jpg" alt=""></p><p>Spring Boot 建议的目录结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">com</span><br><span class="line">  +- example</span><br><span class="line">    +- myproject</span><br><span class="line">      +- Application.java</span><br><span class="line">      |</span><br><span class="line">      +- model</span><br><span class="line">      |  +- Customer.java</span><br><span class="line">      |  +- CustomerRepository.java</span><br><span class="line">      |</span><br><span class="line">      +- service</span><br><span class="line">      |  +- CustomerService.java</span><br><span class="line">      |</span><br><span class="line">      +- controller</span><br><span class="line">      |  +- CustomerController.java</span><br><span class="line">      |</span><br></pre></td></tr></table></figure><ul><li>1、Application.java 建议放到根目录下面,主要用于做一些框架配置</li><li>2、model 目录主要用于实体(Entity)与数据访问层（Repository）</li><li>3、service 层主要是业务类代码</li><li>4、controller 负责页面访问控制</li></ul><p>采用默认配置可以省去很多配置，当然也可以根据自己的喜欢来进行更改<br>最后，启动 Application main 方法，一个 Java 项目搭建好了！</p><p>引入 Spring web 依赖</p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/springboot1-1-2.jpg" alt=""></p><p><strong>pom.xml文件默认有两个模块：</strong></p><ul><li><code>spring-boot-starter</code> ：核心模块，包括自动配置支持、日志和 YAML，如果引入了 <code>spring-boot-starter-web</code> web 模块可以去掉此配置，因为 <code>spring-boot-starter-web</code> 自动依赖了 <code>spring-boot-starter</code>。</li><li><code>spring-boot-starter-test</code> ：测试模块，包括 JUnit、Hamcrest、Mockito。</li></ul><p><strong>编写 Controller 内容：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBtController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloWorld</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello Insomnia"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>@RestController</code> 的意思是Controller 里面的方法都以Json格式输出，不用在写jackjson 配置了；</p><p>启动主程序，打开浏览器访问 <a href="http://localhost:8080/hello，就可以看到效果了，是不是很Nice！" target="_blank" rel="noopener">http://localhost:8080/hello，就可以看到效果了，是不是很Nice！</a></p><p><strong>开发环境调试</strong></p><p>虽然平时开发web项目过程中，改动项目启重启总是报错；但springBoot对调试支持很好，修改之后可以实时生效，需要添加以下的配置：</p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/springboot1-1-3.jpg" alt=""></p><p>这个功能在打包环境下是被禁用的，如果使用 <code>java -jar</code> 启动程序或者用一个特定的classloader启动，他会认为这是一个 “生产环境”</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>使用 Spring Boot 可以很快速的搭建一个项目，我们不需要关心框架之间的兼容性、版本等问题，我们想使用任何东西，只需要添加响应的配置即可。</p><p>查看更多 Spring Boot：<a href="http://insomnia.ltd/categories/Spring-Boot/" target="_blank" rel="noopener">Spring Boot</a></p><p>文章参考：<a href="http://www.ityouknow.com/springboot/2016/01/06/spring-boot-quick-start.html" target="_blank" rel="noopener">纯洁的微笑</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是-Spring-Boot&quot;&gt;&lt;a href=&quot;#什么是-Spring-Boot&quot; class=&quot;headerlink&quot; title=&quot;什么是 Spring Boot&quot;&gt;&lt;/a&gt;什么是 Spring Boot&lt;/h2&gt;&lt;p&gt;Spring Boot 其设计目的是
      
    
    </summary>
    
    
      <category term="Spring Boot" scheme="http://yoursite.com/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot快速入门" scheme="http://yoursite.com/tags/Spring-Boot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>IDEA项目打jar包并运行</title>
    <link href="http://yoursite.com/2020/03/14/IDEA%E9%A1%B9%E7%9B%AE%E6%89%93jar%E5%8C%85%E5%B9%B6%E8%BF%90%E8%A1%8C/"/>
    <id>http://yoursite.com/2020/03/14/IDEA%E9%A1%B9%E7%9B%AE%E6%89%93jar%E5%8C%85%E5%B9%B6%E8%BF%90%E8%A1%8C/</id>
    <published>2020-03-13T19:07:35.000Z</published>
    <updated>2020-03-15T19:09:48.274Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一步-添加jar包"><a href="#第一步-添加jar包" class="headerlink" title="第一步 添加jar包"></a>第一步 添加jar包</h2><p>首先点击File–&gt; 点击Project Structure –&gt; 点击Artifacts –&gt; 点击”+” –&gt; 点击JAR –&gt; 点击From modules with dependencies，这里是给项目工程添加一个艺术品（我们开发出来的项目当然算一个艺术品哈哈），弹出对话框之后，请看第二步<br><img src="https://img-blog.csdnimg.cn/20181102094401973.gif" alt=""></p><p><strong>MANIFEST这个文件很重要，存放的是启动类的全限定名和所有依赖jar包的路径</strong></p><p><img src="https://img-blog.csdnimg.cn/20181111100336486.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTA0NTIzODg=,size_16,color_FFFFFF,t_70" alt=""></p><p><img src="https://img-blog.csdnimg.cn/20181102094726954.gif" alt=""></p><p><strong>把所有依赖的jar包都放到一个文件夹libs下，这样打包之后文件清晰点，看上去也干净整洁多了</strong><img src="https://img-blog.csdnimg.cn/20181102095922219.gif" alt=""></p><p><strong>修改ClassPath</strong></p><p><strong>这里要修改ClassPath，这里的ClassPath就是我们所有依赖的jar包相对路径，因为我们刚刚把依赖的jar包都放到libs文件夹下了，所以这里也需要把ClassPath的路径也要改下，不然找不到依赖的jar包</strong><br><strong>动态图中用的Excel一个小技巧，批量在某单元格前面添加libs/，可以在Excel中使用=“libs/”&amp;G6（这里的G6就是Excel的单元格）</strong><br><img src="https://img-blog.csdnimg.cn/20181102100918200.gif" alt=""></p><p><strong>点击Build –&gt; 点击BuildArtfacts –&gt; 点击–&gt; Build</strong><br><strong>从工程左侧结构图看出多了个out文件夹，那里就存放着我们刚刚打包好的jar包</strong></p><p><img src="https://img-blog.csdnimg.cn/20181102101242703.gif" alt=""></p><h2 id="第二步-启动项目并测试"><a href="#第二步-启动项目并测试" class="headerlink" title="第二步 启动项目并测试"></a>第二步 启动项目并测试</h2><p><strong>cmd切换到打包好之后的jar文件夹，输入java -jar xxx.jar启动工程，并进行测试</strong></p><p><img src="https://img-blog.csdnimg.cn/20181102101723249.gif" alt=""></p><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><p><img src="https://img-blog.csdnimg.cn/20181111113044575.png" alt=""></p><p><strong>这个错误只要把META-INF文件夹删除即可</strong></p><p>查看更多IDEA：<a href="http://insomnia.ltd/categories/IDEA/" target="_blank" rel="noopener">IDEA</a></p><p>原文出处：<a href="https://blog.csdn.net/u010452388/article/details/83650758" target="_blank" rel="noopener">阿顾同学</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第一步-添加jar包&quot;&gt;&lt;a href=&quot;#第一步-添加jar包&quot; class=&quot;headerlink&quot; title=&quot;第一步 添加jar包&quot;&gt;&lt;/a&gt;第一步 添加jar包&lt;/h2&gt;&lt;p&gt;首先点击File–&amp;gt; 点击Project Structure –&amp;gt
      
    
    </summary>
    
    
      <category term="IDEA" scheme="http://yoursite.com/categories/IDEA/"/>
    
    
      <category term="IDEA 打jar包" scheme="http://yoursite.com/tags/IDEA-%E6%89%93jar%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>创建仓库后关联</title>
    <link href="http://yoursite.com/2020/03/13/Git%E6%8F%90%E4%BA%A4%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2020/03/13/Git%E6%8F%90%E4%BA%A4%E5%91%BD%E4%BB%A4/</id>
    <published>2020-03-12T18:06:42.000Z</published>
    <updated>2020-03-15T19:09:57.629Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近在项目中使用到Git版本控制系统进行代码的管理以便于团队成员的协作，由于之前使用的是SVN来进行版本控制，所以对于Git的使用还是有待熟练掌握。Git与SVN类似，个人认为两者之间比较直观的区别就是Git属于分布式的而SVN是集中式的，Git不需要联网（连接代码服务器）即可进行代码的提交以记录每次的修改而SVN需要连接到代码服务器才能进行提交。</span><br></pre></td></tr></table></figure><h2 id="正题"><a href="#正题" class="headerlink" title="正题"></a>正题</h2><p>1：首先需要安装Git，如果已经安装，请跳过。由于Git是Linux开发的，所以大部分使用在Linux上，但也有Win的，下载安装即可<a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">https://git-for-windows.github.io/</a></p><p>2：安装好git服务器后。首先找到你项目的文件夹，进入到这个文件夹，邮件打开模拟Linux风格的命令窗口<strong>Git Besh Here</strong></p><p>可以使用：</p><p><img src="https://raw.githubusercontent.com/zclai163/Insomnia-image/master/photos/Snipaste_2020-03-13_02-24-11.jpg" alt="Snipaste_2020-03-13_02-24-11"></p><p>也可以执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init&#x2F;&#x2F;初始化版本库</span><br><span class="line">git add .&#x2F;&#x2F;添加文件到版本库(只是添加到缓存区)， . 代表添加文件夹下所有文件,如果不需要换成文件名即可</span><br><span class="line">git commit -m &quot;first commit&quot;&#x2F;&#x2F;把添加的文件提交到版本库,并填写提交备注</span><br></pre></td></tr></table></figure><a id="more"></a><p>到目前为止，完成了代码库的初始化，但代码时在本地,还没有提交到远程服务器，所以要提交到远程服务器要进行以下两步；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 你的远程库地址&#x2F;&#x2F; 关联远程库</span><br><span class="line">git push -u origin master&#x2F;&#x2F;第一次推送时</span><br><span class="line">git push origin master&#x2F;&#x2F;第一次推送后，直接使用该命令即可推送修改</span><br></pre></td></tr></table></figure><p>把本地库的内容推送到远程。使用git push 命令，实际上是把当前分支master推送到远程。执行命令后会要求输入用户名、密码，验证通过后即开始上传。</p><p>说明：用户名密码需要通过命令 ssh-keygen -t rsa -C “邮箱”  进行创建，并且把秘钥、公钥文件放到git服务器上，这样才有权限进行代码推送</p><p>查看更多Git点击：  <a href="http://insomnia.ltd/categories/git/" target="_blank" rel="noopener">git</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;最近在项目中使用到Git版本控制系统进行代码的管理以便于团队成员的协作，由于之前使用的是SVN来进行版本控制，所以对于Git的使用还是有待熟练掌握。Git与SVN类似，个人认为两者之间比较直观的区别就是Git属于分布式的而SVN是集中式的，Git不需要联网（连接代码服务器）即可进行代码的提交以记录每次的修改而SVN需要连接到代码服务器才能进行提交。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;正题&quot;&gt;&lt;a href=&quot;#正题&quot; class=&quot;headerlink&quot; title=&quot;正题&quot;&gt;&lt;/a&gt;正题&lt;/h2&gt;&lt;p&gt;1：首先需要安装Git，如果已经安装，请跳过。由于Git是Linux开发的，所以大部分使用在Linux上，但也有Win的，下载安装即可&lt;a href=&quot;https://git-for-windows.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://git-for-windows.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2：安装好git服务器后。首先找到你项目的文件夹，进入到这个文件夹，邮件打开模拟Linux风格的命令窗口&lt;strong&gt;Git Besh Here&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以使用：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/zclai163/Insomnia-image/master/photos/Snipaste_2020-03-13_02-24-11.jpg&quot; alt=&quot;Snipaste_2020-03-13_02-24-11&quot;&gt;&lt;/p&gt;
&lt;p&gt;也可以执行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git init	&amp;#x2F;&amp;#x2F;初始化版本库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add .	&amp;#x2F;&amp;#x2F;添加文件到版本库(只是添加到缓存区)， . 代表添加文件夹下所有文件,如果不需要换成文件名即可&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &amp;quot;first commit&amp;quot;	&amp;#x2F;&amp;#x2F;把添加的文件提交到版本库,并填写提交备注&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
    
      <category term="git关联仓库" scheme="http://yoursite.com/tags/git%E5%85%B3%E8%81%94%E4%BB%93%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>目录</title>
    <link href="http://yoursite.com/2020/03/12/%E7%9B%AE%E5%BD%95/"/>
    <id>http://yoursite.com/2020/03/12/%E7%9B%AE%E5%BD%95/</id>
    <published>2020-03-12T00:04:41.023Z</published>
    <updated>2020-03-15T19:15:44.593Z</updated>
    
    <content type="html"><![CDATA[<p>学习脑图：<a href="https://www.processon.com/view/link/5e67f034e4b05fe7f82347bc" target="_blank" rel="noopener">学习脑图</a></p><p><img src="https://gitee.com/zhaochunlai/Insomnia-Image/raw/master/photos/%E5%AD%A6%E4%B9%A0%E8%84%91%E5%9B%BE.png" alt=""></p><p>学习脑图：<a href="https://www.processon.com/view/link/5e67f034e4b05fe7f82347bc" target="_blank" rel="noopener">学习脑图</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;学习脑图：&lt;a href=&quot;https://www.processon.com/view/link/5e67f034e4b05fe7f82347bc&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;学习脑图&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>SpringCloudEureka</title>
    <link href="http://yoursite.com/2020/03/12/SpringCloudEureka/"/>
    <id>http://yoursite.com/2020/03/12/SpringCloudEureka/</id>
    <published>2020-03-11T21:30:22.000Z</published>
    <updated>2020-03-15T19:15:20.185Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p><strong>添加依赖</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">                       &lt;!--服务端依赖--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;    </span><br><span class="line">&lt;artifactId&gt;spring-cloud-starter-eureka-server&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                      &lt;!--客户端依赖--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-cloud-starter-eureka&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>启动类注解</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">        服务端注解</span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"></span><br><span class="line">        客户端注解</span><br><span class="line"> <span class="meta">@EnableEurekaClient</span></span><br></pre></td></tr></table></figure><p><strong>添加配置</strong></p><p><strong>基本配置 server :</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#服务注册中心端口号</span><br><span class="line">server.port&#x3D;1110</span><br><span class="line">#服务注册中心实例的主机名</span><br><span class="line">eureka.instance.hostname&#x3D;localhost</span><br><span class="line">#是否向服务注册中心注册自己</span><br><span class="line">eureka.client.register-with-eureka&#x3D;false</span><br><span class="line">#是否检索服务</span><br><span class="line">eureka.client.fetch-registry&#x3D;false</span><br><span class="line">#服务注册中心的配置内容，指定服务注册中心的位置</span><br><span class="line">eureka.client.serviceUrl.defaultZone&#x3D;http:&#x2F;&#x2F;$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;&#x2F;eureka&#x2F;</span><br></pre></td></tr></table></figure><p><strong>基本配置 Client:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eureka:  </span><br><span class="line"> client:    </span><br><span class="line">  service-url:     </span><br><span class="line">   defaultZone: http:&#x2F;&#x2F;localhost:10086&#x2F;eureka&#x2F;</span><br></pre></td></tr></table></figure><p><strong>以下配置都是以 eureka.server 开头：</strong><br><img src="https://raw.githubusercontent.com/zclai163/Insomnia-image/master/photos/image-20200312024145263.png" alt="image-20200312024145263"></p><p><strong>client 参数配置：</strong><br><img src="https://raw.githubusercontent.com/zclai163/Insomnia-image/master/photos/image-20200312024208368.png" alt="image-20200312024208368"></p><p><strong>eureka instance 相关配置：</strong><br><img src="https://raw.githubusercontent.com/zclai163/Insomnia-image/master/photos/image-20200312024227480.png" alt="image-20200312024227480"></p><h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h1><h2 id="一-Eureka服务治理体系"><a href="#一-Eureka服务治理体系" class="headerlink" title="一 Eureka服务治理体系"></a>一 Eureka服务治理体系</h2><p><strong>Eureka架构图</strong></p><p><img src="https://raw.githubusercontent.com/zclai163/Insomnia-image/master/photos/image-20200312024420102.png" alt="image-20200312024420102"></p><p>​                                                                <a id="more"></a></p><h3 id="1-1-服务治理"><a href="#1-1-服务治理" class="headerlink" title="1.1 服务治理"></a>1.1 服务治理</h3><p>服务治理是微服务架构中最核心和基础的模块,它主要用来实现各个微服务实例的自动注册和发现。Spring Cloud Eureka是Spring Cloud Netflix微服务套件中的一部分，它基于Netflix Eureka做了二次封装，主要负责完成微服务架构中的服务治理功能。</p><p><strong>Eureka服务治理体系如下</strong></p><h3 id="1-2-服务注册"><a href="#1-2-服务注册" class="headerlink" title="1.2 服务注册"></a>1.2 服务注册</h3><p>在服务治理框架中，通常都会架构一个注册中心，每个服务单元向注册中心登记自己提供的服务，包括服务的主机与端口号、服务版本号、通讯协议等一些附加信息。注册中心按照各分类组织服务清单，同时还需要以心跳检测的方式去检测清单中的服务是否可用，若不可用需要从服务清单中剔除，已达到排除故障服务的效果。</p><h3 id="1-3-服务发现"><a href="#1-3-服务发现" class="headerlink" title="1.3 服务发现"></a>1.3 服务发现</h3><p>在服务治理框架下，服务间的调用不在通过指定具体的实例地址来实现，而是通过服务名发起请求调用实现。服务调用方通过服务名从服务注册中心的服务清单中获取服务实例的列表清单，通过指定的负载均衡策略取出一个服务实例位置来进行服务调用</p><h2 id="二-Netflix-Eureka"><a href="#二-Netflix-Eureka" class="headerlink" title="二 Netflix Eureka"></a>二 Netflix Eureka</h2><h3 id="2-1-Netflix-Eureka介绍"><a href="#2-1-Netflix-Eureka介绍" class="headerlink" title="2.1 Netflix Eureka介绍"></a>2.1 Netflix Eureka介绍</h3><p>Spring Cloud Eureka使用Netflix Eureka来实现服务注册与发现。它既包含了服务端组件，也包括了客户端组件，并且服务端与客户端均采用Java编写，所以Eureka主要适用于通过Java实现的分布式系统，或是JVM兼容语言构建的系统。Eureka的服务端提供了较为完善的REST API，所以Eureka也支持客户端程序。目前.NET平台的Steeltoe、Node.js的eureka-js-client等都已经实现了各自平台的Eureka客户端组件。</p><h3 id="2-2-Eureka服务端"><a href="#2-2-Eureka服务端" class="headerlink" title="2.2 Eureka服务端"></a>2.2 Eureka服务端</h3><p>Eureka服务端，即服务注册中心。它同其他服务注册中心一样，支持高可用配置。依托于强一致性提供良好的服务实例可用性，可以应对多种不同的故障场景。</p><p>Eureka服务端支持集群模式部署，当集群中分片发生故障的时候，Eureka会自动转入自我保护模式。它允许在分片发生故障的时候继续提供服务的发现和注册，当故障分配恢复时，集群中的其他分片会把他们的状态再次同步回来。集群中的不同服务，注册中心通过异步模式互相赋值各自的状态，这也意味着在给定的时间点每个实例关于所有服务的状态可能存在不一致的现象</p><h3 id="2-3-Eureka客户端"><a href="#2-3-Eureka客户端" class="headerlink" title="2.3 Eureka客户端"></a>2.3 Eureka客户端</h3><p>Eureka客户端，主要处理服务的注册和发现。客户端通过注册和参数配置的方式，嵌入在客户端应用程序的代码中。在应用程序启动时，Eureka客户端向服务注册中心注册自身提供的服务，并周期性的发生心跳来更新它的服务租约。同时，它也能从服务端查询单查询注册的服务信息并把它们缓存到本地并周期性的刷新服务状态。</p><h2 id="三-服务注册中心"><a href="#三-服务注册中心" class="headerlink" title="三 服务注册中心"></a>三 服务注册中心</h2><h3 id="3-1-服务注册中心功能概述"><a href="#3-1-服务注册中心功能概述" class="headerlink" title="3.1 服务注册中心功能概述"></a>3.1 服务注册中心功能概述</h3><p>在服务治理框架中，通常都会构建一个注册中心，每个服务单元向注册中心登记自己提供的服务，包括服务的主机与端口号、服务版本号、通讯协议等一些附加信息。注册中心按照服务名分类组织服务清单，同时还需要以心跳检测的方式去监测清单中的服务是否可用，若不可用需要从服务清单中剔除，以达到排除故障服务的效果。</p><h3 id="3-2-创建Eureka-Server服务"><a href="#3-2-创建Eureka-Server服务" class="headerlink" title="3.2 创建Eureka Server服务"></a>3.2 创建Eureka Server服务</h3><p>创建一个Spring Boot工程，命名问Eureka-Server，并在pom文件中引入依赖： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">     &lt;dependency&gt;</span><br><span class="line">         &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">         &lt;artifactId&gt;spring-cloud-starter-eureka-server&lt;&#x2F;artifactId&gt;</span><br><span class="line">     &lt;&#x2F;dependency&gt;</span><br><span class="line"> </span><br><span class="line">     &lt;dependency&gt;</span><br><span class="line">         &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">         &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class="line">         &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line">     &lt;&#x2F;dependency&gt;</span><br><span class="line"> &lt;&#x2F;dependencies&gt;</span><br><span class="line"> </span><br><span class="line"> &lt;dependencyManagement&gt;</span><br><span class="line">     &lt;dependencies&gt;</span><br><span class="line">         &lt;dependency&gt;</span><br><span class="line">             &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">             &lt;artifactId&gt;spring-cloud-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">             &lt;version&gt;$&#123;spring-cloud.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">             &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">             &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">         &lt;&#x2F;dependency&gt;</span><br><span class="line">     &lt;&#x2F;dependencies&gt;</span><br><span class="line"> &lt;&#x2F;dependencyManagement&gt;</span><br></pre></td></tr></table></figure><h3 id="3-3-Eureka-Server相关配置"><a href="#3-3-Eureka-Server相关配置" class="headerlink" title="3.3 Eureka Server相关配置"></a>3.3 Eureka Server相关配置</h3><p>在默认配置下，Eureka Server会将自己也作为客户端来尝试注册自己，我们需要禁用它的客户端注册行为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#服务注册中心端口号</span><br><span class="line">server.port&#x3D;1110</span><br><span class="line">#服务注册中心实例的主机名</span><br><span class="line">eureka.instance.hostname&#x3D;localhost</span><br><span class="line">#是否向服务注册中心注册自己</span><br><span class="line">eureka.client.register-with-eureka&#x3D;false</span><br><span class="line">#是否检索服务</span><br><span class="line">eureka.client.fetch-registry&#x3D;false</span><br><span class="line">#服务注册中心的配置内容，指定服务注册中心的位置</span><br><span class="line">eureka.client.serviceUrl.defaultZone&#x3D;http:&#x2F;&#x2F;$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;&#x2F;eureka&#x2F;</span><br></pre></td></tr></table></figure><h3 id="3-4-启动服务注册中心"><a href="#3-4-启动服务注册中心" class="headerlink" title="3.4 启动服务注册中心"></a>3.4 启动服务注册中心</h3><p>通过@EnableEurekaServer注解启动服务注册中心，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">importorg.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line">importorg.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"> </span><br><span class="line">@EnableEurekaServer</span><br><span class="line">@SpringBootApplication</span><br><span class="line">public class IefopEurekaServerApplication &#123;</span><br><span class="line"> </span><br><span class="line">         publicstatic void main(String[] args) &#123;</span><br><span class="line">                   SpringApplication.run(IefopEurekaServerApplication.class,args);</span><br><span class="line">         &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-5-高可用服务注册中心"><a href="#3-5-高可用服务注册中心" class="headerlink" title="3.5 高可用服务注册中心"></a>3.5 高可用服务注册中心</h3><h4 id="3-5-1-高可用服务注册中心概念"><a href="#3-5-1-高可用服务注册中心概念" class="headerlink" title="3.5.1 高可用服务注册中心概念"></a>3.5.1 高可用服务注册中心概念</h4><p>考虑到发生故障的情况，服务注册中心发生故障必将造成整个系统的瘫痪，因此需要保证服务注册中心的高可用。</p><p>Eureka Server在设计的时候就考虑了高可用设计，在Eureka服务治理设计中，所有节点即是服务的提供方，也是服务的消费方，服务注册中心也不例外。</p><p>Eureka Server的高可用实际上就是将自己作为服务向其他注册中心注册自己，这样就可以形成一组相互注册的服务注册中心，以实现服务清单的相互同步，达到高可用的效果。</p><h4 id="3-5-2-构建服务注册中心集群"><a href="#3-5-2-构建服务注册中心集群" class="headerlink" title="3.5.2 构建服务注册中心集群"></a>3.5.2 构建服务注册中心集群</h4><p>Eureka Server的同步遵循着一个非常简单的原则：只要有一条边将节点连接，就可以进行信息传播与同步。可以采用两两注册的方式实现集群中完全对等的效果，实现最高可用性集群，任何一台注册中心故障都不会影响服务的注册与发现。</p><p><strong>（1）创建application-peer1.properties</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server.port&#x3D;1111</span><br><span class="line">eureka.instance.hostname&#x3D;master</span><br><span class="line">eureka.client.register-with-eureka&#x3D;false</span><br><span class="line">eureka.client.fetch-registry&#x3D;false</span><br><span class="line">eureka.instance.preferIpAddress&#x3D;true</span><br><span class="line">eureka.server.enableSelfPreservation&#x3D;false</span><br><span class="line">eureka.client.serviceUrl.defaultZone&#x3D;http:&#x2F;&#x2F;backup1:1112&#x2F;eureka&#x2F;,http:&#x2F;&#x2F;backup2:1113&#x2F;eureka&#x2F;</span><br></pre></td></tr></table></figure><p><strong>（2）创建application-peer2.properties</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server.port&#x3D;1112</span><br><span class="line">eureka.instance.hostname&#x3D;backup1</span><br><span class="line">eureka.client.register-with-eureka&#x3D;false</span><br><span class="line">eureka.client.fetch-registry&#x3D;false</span><br><span class="line">eureka.instance.preferIpAddress&#x3D;true</span><br><span class="line">eureka.server.enableSelfPreservation&#x3D;false</span><br><span class="line">eureka.client.serviceUrl.defaultZone&#x3D;http:&#x2F;&#x2F;master:1111&#x2F;eureka&#x2F;,http:&#x2F;&#x2F;backup2:1113&#x2F;eureka&#x2F;</span><br></pre></td></tr></table></figure><p><strong>（3）创建application-peer3.properties</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server.port&#x3D;1113</span><br><span class="line">eureka.instance.hostname&#x3D;backup2</span><br><span class="line">eureka.client.register-with-eureka&#x3D;false</span><br><span class="line">eureka.client.fetch-registry&#x3D;false</span><br><span class="line">eureka.instance.preferIpAddress&#x3D;true</span><br><span class="line">eureka.server.enableSelfPreservation&#x3D;false</span><br><span class="line">eureka.client.serviceUrl.defaultZone&#x3D;http:&#x2F;&#x2F;master:1111&#x2F;eureka&#x2F;,http:&#x2F;&#x2F;backup1:1112&#x2F;eureka&#x2F;</span><br></pre></td></tr></table></figure><p><strong>(4) 在hosts文件中增加如下配置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 master</span><br><span class="line">127.0.0.1 backup1</span><br><span class="line">127.0.0.1 backup2</span><br></pre></td></tr></table></figure><h3 id="3-6-失效剔除"><a href="#3-6-失效剔除" class="headerlink" title="3.6 失效剔除"></a>3.6 失效剔除</h3><p>有些时候，我们的服务实例并不一定会正常下线，可能由于内存溢出、网络故障灯原因使服务不能正常运行。而注册中心并未収到“服务下线”的请求，为了从服务列表中将这些无法提供服务的实例剔除，Eureka Server在启动的时候会创建一个定时任务，默认每隔一段时间（默认60S）将当前清单中超时（默认为90秒）没有续约的服务剔除出去。</p><h3 id="3-7-自我保护"><a href="#3-7-自我保护" class="headerlink" title="3.7 自我保护"></a>3.7 自我保护</h3><p>服务注册到Eureka Server后，会维护一个心跳连接，告诉Eureka Server自己还活着。Eureka Server在运行期间会统计心跳失败的比例在15分钟以内是否低于85%，如果出现低于的情况Eureka Server会将当前实例注册信息保护起来，让这些实例不会过期。这样做会使客户端很容易拿到实例已经不存在的服务实例，会出现调用失败的情况。因此客户端有容错机制，比如请求重试、断路器。<br><strong>以下是自我保护相关的属性：</strong><br>eureka.server.enableSelfPreservation=true. 可以设置改参数值为false，以确保注册中心将不可用的实例删除</p><h3 id="3-8-region（地域）与zone（可用区）"><a href="#3-8-region（地域）与zone（可用区）" class="headerlink" title="3.8 region（地域）与zone（可用区）"></a>3.8 region（地域）与zone（可用区）</h3><p>region和zone（或者Availability Zone）均是AWS的概念。在非AWS环境下，我们可以简单地将region理解为地域，zone理解成机房。一个region可以包含多个zone，可以理解为一个地域内的多个不同的机房。不同地域的距离很远，一个地域的不同zone间距离往往较近，也可能在同一个机房内。</p><p>region可以通过配置文件进行配置，如果不配置，会默认使用us-east-1。同样Zone也可以配置，如果不配置，会默认使用defaultZone。Eureka Server通过eureka.client.serviceUrl.defaultZone属性设置Eureka的服务注册中心的位置。指定region和zone的属性如下：（1）.eureka.client.availabilityZones.myregion=myzone# myregion是region<br>（2）.eureka.client.region=myregion<br>Ribbon的默认策略会优先访问通客户端处于同一个region中的服务端实例，只有当同一个zone中没有可用服务端实例的时候才会访问其他zone中的实例。所以通过zone属性的定义，配合实际部署的物理结构，我们就可以设计出应对区域性故障的容错集群。</p><h3 id="3-9-安全验证"><a href="#3-9-安全验证" class="headerlink" title="3.9 安全验证"></a>3.9 安全验证</h3><p>我们启动了Eureka Server，然后在浏览器中输入<a href="http://localhost:8767/后，直接回车，就进入了Spring" target="_blank" rel="noopener">http://localhost:8767/后，直接回车，就进入了Spring</a> Cloud的服务治理页面，这么做在生产环境是极不安全的，下面，我们就给Eureka Server加上安全的用户认证。<br>（1）pom文件中引入依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt; </span><br><span class="line">   &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt; </span><br><span class="line">   &lt;artifactId&gt;spring-boot-starter-security&lt;&#x2F;artifactId&gt; </span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>（2） serviceurl中加入安全校验信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eureka.client.serviceUrl.defaultZone&#x3D;http:&#x2F;&#x2F;&lt;username&gt;:&lt;password&gt;@$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;&#x2F;eureka&#x2F;</span><br></pre></td></tr></table></figure><h3 id="3-10-Eureka信息面板"><a href="#3-10-Eureka信息面板" class="headerlink" title="3.10 Eureka信息面板"></a>3.10 Eureka信息面板</h3><p>服务启动后，访问<a href="http://127.0.0.1:1110/可以看到Eureka的信息面板。" target="_blank" rel="noopener">http://127.0.0.1:1110/可以看到Eureka的信息面板。</a></p><h2 id="四-服务提供者"><a href="#四-服务提供者" class="headerlink" title="四 服务提供者"></a>四 服务提供者</h2><h3 id="4-1-服务注册"><a href="#4-1-服务注册" class="headerlink" title="4.1 服务注册"></a>4.1 服务注册</h3><p>服务提供者在启动的时候会通过REST请求的方式将自己注册到Eureka Service上，同时带上自身服务的一些元数据信息。Eureka Service接收到这个Rest请求之后，将元数据信息存储在一个床层结果的Map中，其中第一层的key是服务名。第二层的key是具体服务的实例名。</p><p>在服务注册时，需要确认一下eureka.client.register-with-eureka=true参数是否正确，该参数默认为true。若设置为false将不会启动注册操作。</p><h3 id="4-2-服务同步"><a href="#4-2-服务同步" class="headerlink" title="4.2   服务同步"></a>4.2   服务同步</h3><p>从eureka服务治理体系架构图中可以看到，不同的服务提供者可以注册在不同的服务注册中心上，它们的信息被不同的服务注册中心维护。</p><p>此时，由于多个服务注册中心互相注册为服务，当服务提供者发送注册请求到一个服务注册中心时，它会将该请求转发给集群中相连的其他注册中心，从而实现服务注册中心之间的服务同步。通过服务同步，提供者的服务信息就可以通过集群中的任意一个服务注册中心获得。</p><h3 id="4-3-服务续约"><a href="#4-3-服务续约" class="headerlink" title="4.3 服务续约"></a>4.3 服务续约</h3><p>在注册服务之后，服务提供者会维护一个心跳用来持续告诉Eureka Server，“我还在持续提供服务”，否则Eureka Server的剔除任务会将该服务实例从服务列表中排除出去。我们称为服务续约。</p><p><strong>下面是服务续约的两个重要属性：</strong><br>（1）eureka.instance.lease-expiration-duration-in-seconds</p><p>leaseExpirationDurationInSeconds，表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。</p><p>默认为90秒<br>如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。该值至少应该大于leaseRenewalIntervalInSeconds</p><p>（2）eureka.instance.lease-renewal-interval-in-seconds</p><p>leaseRenewalIntervalInSeconds，表示eureka client发送心跳给server端的频率。如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance。除此之外，如果该instance实现了HealthCheckCallback，并决定让自己unavailable的话，则该instance也不会接收到流量。<br>默认30秒</p><h3 id="4-4-创建并注册服务提供者"><a href="#4-4-创建并注册服务提供者" class="headerlink" title="4.4 创建并注册服务提供者"></a>4.4 创建并注册服务提供者</h3><h4 id="4-4-4-创建Eureka客户端服务"><a href="#4-4-4-创建Eureka客户端服务" class="headerlink" title="4.4.4 创建Eureka客户端服务"></a>4.4.4 创建Eureka客户端服务</h4><p>创建一个Spring Boot工程，命名为Eureka-Client，并在pom文件中引入依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-starter-eureka&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;  </span><br><span class="line">  &lt;&#x2F;dependencies&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;dependencyManagement&gt;</span><br><span class="line">      &lt;dependencies&gt;</span><br><span class="line">          &lt;dependency&gt;</span><br><span class="line">              &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">              &lt;artifactId&gt;spring-cloud-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">              &lt;version&gt;$&#123;spring-cloud.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">              &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">              &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">          &lt;&#x2F;dependency&gt;</span><br><span class="line">      &lt;&#x2F;dependencies&gt;</span><br><span class="line">  &lt;&#x2F;dependencyManagement&gt;</span><br></pre></td></tr></table></figure><h4 id="4-4-2-Eureka-Client相关配置"><a href="#4-4-2-Eureka-Client相关配置" class="headerlink" title="4.4.2 Eureka Client相关配置"></a>4.4.2 Eureka Client相关配置</h4><p>在Eureka客户端需要在appilication.properties文件中指定服务注册中心的地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eureka.port&#x3D;1110</span><br><span class="line">eureka.instance.hostname&#x3D;localhost</span><br><span class="line">#在此指定服务注册中心地址</span><br><span class="line">eureka.client.serviceUrl.defaultZone&#x3D;http:&#x2F;&#x2F;$&#123;eureka.instance.hostname&#125;:$&#123;eureka.port&#125;&#x2F;eureka&#x2F;</span><br></pre></td></tr></table></figure><h4 id="4-4-3-启动Eureka客户端"><a href="#4-4-3-启动Eureka客户端" class="headerlink" title="4.4.3 启动Eureka客户端"></a>4.4.3 启动Eureka客户端</h4><p>在主类中加入@EnableEurekaClient注解启动Eureka客户端，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">package com.shl.iefop;</span><br><span class="line"> </span><br><span class="line">importorg.springframework.boot.SpringApplication;</span><br><span class="line">importorg.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line">importorg.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line">@EnableEurekaClient</span><br><span class="line">@SpringBootApplication</span><br><span class="line">public class IefopEurekaClientApplication &#123;</span><br><span class="line">         publicstatic void main(String[] args) &#123;</span><br><span class="line">                   SpringApplication.run(IefopEurekaClientApplication.class,args);</span><br><span class="line">         &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="五-服务消费者"><a href="#五-服务消费者" class="headerlink" title="五 服务消费者"></a>五 服务消费者</h2><h3 id="5-1-获取服务"><a href="#5-1-获取服务" class="headerlink" title="5.1 获取服务"></a>5.1 获取服务</h3><p>消费者服务启动时，会发送一个Rest请求给服务注册中心，来获取上面注册的服务清单。为了性能考虑，Eureka Server会维护一份只读的服务注册清单来返回给客户端，同时该缓存清单默认会每隔30秒更新一次。<br><strong>下面是获取服务的两个重要的属性：</strong><br>（1）.eureka.client.fetch-registry<br>是否需要去检索寻找服务，默认是true</p><p>（2）.eureka.client.registry-fetch-interval-seconds<br>表示eureka client间隔多久去拉取服务注册信息，默认为30秒，对于api-gateway，如果要迅速获取服务注册状态，可以缩小该值，比如5秒</p><h3 id="5-2-服务调用"><a href="#5-2-服务调用" class="headerlink" title="5.2 服务调用"></a>5.2 服务调用</h3><p>服务消费者在获取服务清单后，通过服务名可以获取具体提供服务的实例名和该实例的元数据信息。<br>因为有这些服务实例的详细信息，所以客户端可以根据自己的需要决定具体调用哪个实例，在Ribbon中会默认采用轮询的方式进行调用，从而实现客户端的负载均衡。</p><h3 id="5-3-服务下线"><a href="#5-3-服务下线" class="headerlink" title="5.3 服务下线"></a>5.3 服务下线</h3><p>在系统运行过程在必然会面临关闭或重启服务的某个实例的情况，在服务关闭操作时，会触发一个服务下线的Rest服务请求给Eureka Server，告诉服务注册中心：“我要下线了”。服务端在接收到该请求后，将该服务状态置为下线（DOWN），并把该下线时间传播出去。</p><h2 id="六-服务实例类配置"><a href="#六-服务实例类配置" class="headerlink" title="六 服务实例类配置"></a>六 服务实例类配置</h2><h3 id="6-1-端点配置"><a href="#6-1-端点配置" class="headerlink" title="6.1 端点配置"></a>6.1 端点配置</h3><p>Eureka实例的状态页面和监控监控的url默认为spring boot actuator提供的/info端点和/health端点。我们必须确保Eureka客户端的/health端点在发送元数据的时候，是一个能被注册中心访问到的地址，否则服务注册中心不会根据应用的监控检查来更改状态（仅当开启了HealthCheck功能时，以该端点信息作为监控检查标准）。而如果/info端点不正确的话，会导致在Eureka面板中单机服务时，无法访问到服务实例提供的信息接口。</p><p>大多数情况下，我们不需要修改这几个url配置。但是当应用不使用默认的上下文（context path或servlet path，比如配置server.servletPath=/test），或者管理终端路径（比如配置maanagement.contextPath=/admin）时，我们需要修改监控检查和状态页的url地址信息。</p><p>application.yml配置文件如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server.context-path&#x3D;&#x2F;helloeureka</span><br><span class="line">&#x2F;&#x2F;下面配置为相对路径，也支持配置成绝对路径，例如需要支持https</span><br><span class="line">eureka.instance.health-check-url-path&#x3D;$&#123;server.context-path&#125;&#x2F;health</span><br><span class="line">eureka.instance.status-page-url-path&#x3D;$&#123;server.context-path&#125;&#x2F;info</span><br></pre></td></tr></table></figure><h3 id="6-2-元数据"><a href="#6-2-元数据" class="headerlink" title="6.2 元数据"></a>6.2 元数据</h3><p>元数据是Eureka客户端在向服务注册中心发送注册请求时，用来描述自身服务信息的对象，其中包含了一些标准化的元数据，比如服务名称、实例名称、实例IP、实例端口等用于服务治理的重要信息；以及一些用于负载均衡策略或是其他特殊用途的自定义元数据信息。</p><p>我们可以通过eureka.instance.<properties>=<value>的格式对标准化元数据直接进行配置，其中<properties>就是EurekaInstanceConfigBean对象中的成员变量。而对于自定义元数据，可以通过eureka.instance.metadataMap.<key>=<value>的格式来进行配置。比如：</p><p>eureka.instance.metadataMap.zone=tianjin</p><p>//随机生成实例名<br>eureka.instance.metadataMap.instanceId=${spring.application.name}:${random.value}</p><h3 id="6-3-健康检测"><a href="#6-3-健康检测" class="headerlink" title="6.3 健康检测"></a>6.3 健康检测</h3><p>默认情况下，Eureka中各个服务实例的健康检测并不是通过spring-boot-acturator模块的/health端点来实现的，而是依靠客户端心跳的方式来保持服务实例的存活。在Eureka的服务续约与剔除机制下，客户端的健康状态从注册到注册中心开始都会处于UP状态，除非心跳终止一段时间之后，服务注册中心将其剔除。默认的心跳实现方式可以有效检查客户端进程是否正常运作，但却无法保证客户端应用能够正常提供服务。</p><p>在Spring Cloud Eureka中，可以把Eureka客户端的健康检测交给spring-boot-actuator模块的health端点，以实现更加全面的健康状态维护，设置方式如下：</p><p>（1）      在pom.xml中引入spring-boot-starter-actuator模块的依赖</p><p>（2）      在application.properties中增加参数配置eureka.client.healthcheck.enabled=true</p><h3 id="6-4-其他配置"><a href="#6-4-其他配置" class="headerlink" title="6.4 其他配置"></a>6.4 其他配置</h3><p>除了上述配置参数外，下面整理了一些EurekaInstanceConfigBean中定义的配置参数以及对应的说明和默认值，这些参数均以eureka.instance为前缀。</p><h2 id="七-通讯协议"><a href="#七-通讯协议" class="headerlink" title="七 通讯协议"></a>七 通讯协议</h2><p>默认情况下，Eureka使用Jersey和XStream配合JSON作为Server与Client之间的通讯协议。也可以选择实现自己的协议来代替。</p><p>学习更多Spring Cloud知识：<a href="http://insomnia.ltd/categories/Spring-Cloud/" target="_blank" rel="noopener">Spring Cloud</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;添加依赖&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;                       &amp;lt;!--服务端依赖--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;&amp;#x2F;groupId&amp;gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka-server&amp;lt;&amp;#x2F;artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&amp;#x2F;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &amp;lt;!--客户端依赖--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;&amp;#x2F;groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka&amp;lt;&amp;#x2F;artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&amp;#x2F;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;启动类注解&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        服务端注解&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@EnableEurekaClient&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        客户端注解&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;meta&quot;&gt;@EnableEurekaClient&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;添加配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基本配置 server :&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#服务注册中心端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server.port&amp;#x3D;1110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#服务注册中心实例的主机名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;eureka.instance.hostname&amp;#x3D;localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#是否向服务注册中心注册自己&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;eureka.client.register-with-eureka&amp;#x3D;false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#是否检索服务&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;eureka.client.fetch-registry&amp;#x3D;false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#服务注册中心的配置内容，指定服务注册中心的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;eureka.client.serviceUrl.defaultZone&amp;#x3D;http:&amp;#x2F;&amp;#x2F;$&amp;#123;eureka.instance.hostname&amp;#125;:$&amp;#123;server.port&amp;#125;&amp;#x2F;eureka&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;基本配置 Client:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;eureka:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; client:    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  service-url:     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   defaultZone: http:&amp;#x2F;&amp;#x2F;localhost:10086&amp;#x2F;eureka&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;以下配置都是以 eureka.server 开头：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/zclai163/Insomnia-image/master/photos/image-20200312024145263.png&quot; alt=&quot;image-20200312024145263&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;client 参数配置：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/zclai163/Insomnia-image/master/photos/image-20200312024208368.png&quot; alt=&quot;image-20200312024208368&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;eureka instance 相关配置：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/zclai163/Insomnia-image/master/photos/image-20200312024227480.png&quot; alt=&quot;image-20200312024227480&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;理论&quot;&gt;&lt;a href=&quot;#理论&quot; class=&quot;headerlink&quot; title=&quot;理论&quot;&gt;&lt;/a&gt;理论&lt;/h1&gt;&lt;h2 id=&quot;一-Eureka服务治理体系&quot;&gt;&lt;a href=&quot;#一-Eureka服务治理体系&quot; class=&quot;headerlink&quot; title=&quot;一 Eureka服务治理体系&quot;&gt;&lt;/a&gt;一 Eureka服务治理体系&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Eureka架构图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/zclai163/Insomnia-image/master/photos/image-20200312024420102.png&quot; alt=&quot;image-20200312024420102&quot;&gt;&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
    
      <category term="Spring Cloud" scheme="http://yoursite.com/categories/Spring-Cloud/"/>
    
    
      <category term="Eureka" scheme="http://yoursite.com/tags/Eureka/"/>
    
  </entry>
  
</feed>
